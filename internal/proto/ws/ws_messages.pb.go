// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v6.32.0
// source: proto/ws_messages.proto

package ws

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// DAG node status enum
type DagNodeStatus int32

const (
	DagNodeStatus_DAG_NODE_STATUS_UNSPECIFIED DagNodeStatus = 0
	DagNodeStatus_DAG_NODE_STATUS_LOCKED      DagNodeStatus = 1
	DagNodeStatus_DAG_NODE_STATUS_AVAILABLE   DagNodeStatus = 2
	DagNodeStatus_DAG_NODE_STATUS_IN_PROGRESS DagNodeStatus = 3
	DagNodeStatus_DAG_NODE_STATUS_COMPLETED   DagNodeStatus = 4
)

// Enum value maps for DagNodeStatus.
var (
	DagNodeStatus_name = map[int32]string{
		0: "DAG_NODE_STATUS_UNSPECIFIED",
		1: "DAG_NODE_STATUS_LOCKED",
		2: "DAG_NODE_STATUS_AVAILABLE",
		3: "DAG_NODE_STATUS_IN_PROGRESS",
		4: "DAG_NODE_STATUS_COMPLETED",
	}
	DagNodeStatus_value = map[string]int32{
		"DAG_NODE_STATUS_UNSPECIFIED": 0,
		"DAG_NODE_STATUS_LOCKED":      1,
		"DAG_NODE_STATUS_AVAILABLE":   2,
		"DAG_NODE_STATUS_IN_PROGRESS": 3,
		"DAG_NODE_STATUS_COMPLETED":   4,
	}
)

func (x DagNodeStatus) Enum() *DagNodeStatus {
	p := new(DagNodeStatus)
	*p = x
	return p
}

func (x DagNodeStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DagNodeStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_ws_messages_proto_enumTypes[0].Descriptor()
}

func (DagNodeStatus) Type() protoreflect.EnumType {
	return &file_proto_ws_messages_proto_enumTypes[0]
}

func (x DagNodeStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DagNodeStatus.Descriptor instead.
func (DagNodeStatus) EnumDescriptor() ([]byte, []int) {
	return file_proto_ws_messages_proto_rawDescGZIP(), []int{0}
}

// DAG node kind enum
type DagNodeKind int32

const (
	DagNodeKind_DAG_NODE_KIND_UNSPECIFIED DagNodeKind = 0
	DagNodeKind_DAG_NODE_KIND_FACTORY     DagNodeKind = 1
	DagNodeKind_DAG_NODE_KIND_UNIT        DagNodeKind = 2
	DagNodeKind_DAG_NODE_KIND_STORY       DagNodeKind = 3
	DagNodeKind_DAG_NODE_KIND_CRAFT       DagNodeKind = 4
)

// Enum value maps for DagNodeKind.
var (
	DagNodeKind_name = map[int32]string{
		0: "DAG_NODE_KIND_UNSPECIFIED",
		1: "DAG_NODE_KIND_FACTORY",
		2: "DAG_NODE_KIND_UNIT",
		3: "DAG_NODE_KIND_STORY",
		4: "DAG_NODE_KIND_CRAFT",
	}
	DagNodeKind_value = map[string]int32{
		"DAG_NODE_KIND_UNSPECIFIED": 0,
		"DAG_NODE_KIND_FACTORY":     1,
		"DAG_NODE_KIND_UNIT":        2,
		"DAG_NODE_KIND_STORY":       3,
		"DAG_NODE_KIND_CRAFT":       4,
	}
)

func (x DagNodeKind) Enum() *DagNodeKind {
	p := new(DagNodeKind)
	*p = x
	return p
}

func (x DagNodeKind) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DagNodeKind) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_ws_messages_proto_enumTypes[1].Descriptor()
}

func (DagNodeKind) Type() protoreflect.EnumType {
	return &file_proto_ws_messages_proto_enumTypes[1]
}

func (x DagNodeKind) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DagNodeKind.Descriptor instead.
func (DagNodeKind) EnumDescriptor() ([]byte, []int) {
	return file_proto_ws_messages_proto_rawDescGZIP(), []int{1}
}

// Story intent enum
type StoryIntent int32

const (
	StoryIntent_STORY_INTENT_UNSPECIFIED StoryIntent = 0
	StoryIntent_STORY_INTENT_FACTORY     StoryIntent = 1
	StoryIntent_STORY_INTENT_UNIT        StoryIntent = 2
)

// Enum value maps for StoryIntent.
var (
	StoryIntent_name = map[int32]string{
		0: "STORY_INTENT_UNSPECIFIED",
		1: "STORY_INTENT_FACTORY",
		2: "STORY_INTENT_UNIT",
	}
	StoryIntent_value = map[string]int32{
		"STORY_INTENT_UNSPECIFIED": 0,
		"STORY_INTENT_FACTORY":     1,
		"STORY_INTENT_UNIT":        2,
	}
)

func (x StoryIntent) Enum() *StoryIntent {
	p := new(StoryIntent)
	*p = x
	return p
}

func (x StoryIntent) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StoryIntent) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_ws_messages_proto_enumTypes[2].Descriptor()
}

func (StoryIntent) Type() protoreflect.EnumType {
	return &file_proto_ws_messages_proto_enumTypes[2]
}

func (x StoryIntent) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StoryIntent.Descriptor instead.
func (StoryIntent) EnumDescriptor() ([]byte, []int) {
	return file_proto_ws_messages_proto_rawDescGZIP(), []int{2}
}

// WsEnvelope wraps all WebSocket messages in a discriminated union
type WsEnvelope struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Payload:
	//
	//	*WsEnvelope_StateUpdate
	//	*WsEnvelope_RoomFull
	//	*WsEnvelope_Join
	//	*WsEnvelope_SpawnBot
	//	*WsEnvelope_AddWaypoint
	//	*WsEnvelope_UpdateWaypoint
	//	*WsEnvelope_MoveWaypoint
	//	*WsEnvelope_DeleteWaypoint
	//	*WsEnvelope_ClearWaypoints
	//	*WsEnvelope_ConfigureMissile
	//	*WsEnvelope_AddMissileWaypoint
	//	*WsEnvelope_UpdateMissileWaypointSpeed
	//	*WsEnvelope_MoveMissileWaypoint
	//	*WsEnvelope_DeleteMissileWaypoint
	//	*WsEnvelope_ClearMissileRoute
	//	*WsEnvelope_AddMissileRoute
	//	*WsEnvelope_RenameMissileRoute
	//	*WsEnvelope_DeleteMissileRoute
	//	*WsEnvelope_SetActiveMissileRoute
	//	*WsEnvelope_LaunchMissile
	//	*WsEnvelope_DagStart
	//	*WsEnvelope_DagCancel
	//	*WsEnvelope_DagStoryAck
	//	*WsEnvelope_DagList
	//	*WsEnvelope_MissionSpawnWave
	//	*WsEnvelope_MissionStoryEvent
	//	*WsEnvelope_DagListResponse
	Payload       isWsEnvelope_Payload `protobuf_oneof:"payload"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WsEnvelope) Reset() {
	*x = WsEnvelope{}
	mi := &file_proto_ws_messages_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WsEnvelope) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WsEnvelope) ProtoMessage() {}

func (x *WsEnvelope) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ws_messages_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WsEnvelope.ProtoReflect.Descriptor instead.
func (*WsEnvelope) Descriptor() ([]byte, []int) {
	return file_proto_ws_messages_proto_rawDescGZIP(), []int{0}
}

func (x *WsEnvelope) GetPayload() isWsEnvelope_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *WsEnvelope) GetStateUpdate() *StateUpdate {
	if x != nil {
		if x, ok := x.Payload.(*WsEnvelope_StateUpdate); ok {
			return x.StateUpdate
		}
	}
	return nil
}

func (x *WsEnvelope) GetRoomFull() *RoomFullError {
	if x != nil {
		if x, ok := x.Payload.(*WsEnvelope_RoomFull); ok {
			return x.RoomFull
		}
	}
	return nil
}

func (x *WsEnvelope) GetJoin() *ClientJoin {
	if x != nil {
		if x, ok := x.Payload.(*WsEnvelope_Join); ok {
			return x.Join
		}
	}
	return nil
}

func (x *WsEnvelope) GetSpawnBot() *SpawnBot {
	if x != nil {
		if x, ok := x.Payload.(*WsEnvelope_SpawnBot); ok {
			return x.SpawnBot
		}
	}
	return nil
}

func (x *WsEnvelope) GetAddWaypoint() *AddWaypoint {
	if x != nil {
		if x, ok := x.Payload.(*WsEnvelope_AddWaypoint); ok {
			return x.AddWaypoint
		}
	}
	return nil
}

func (x *WsEnvelope) GetUpdateWaypoint() *UpdateWaypoint {
	if x != nil {
		if x, ok := x.Payload.(*WsEnvelope_UpdateWaypoint); ok {
			return x.UpdateWaypoint
		}
	}
	return nil
}

func (x *WsEnvelope) GetMoveWaypoint() *MoveWaypoint {
	if x != nil {
		if x, ok := x.Payload.(*WsEnvelope_MoveWaypoint); ok {
			return x.MoveWaypoint
		}
	}
	return nil
}

func (x *WsEnvelope) GetDeleteWaypoint() *DeleteWaypoint {
	if x != nil {
		if x, ok := x.Payload.(*WsEnvelope_DeleteWaypoint); ok {
			return x.DeleteWaypoint
		}
	}
	return nil
}

func (x *WsEnvelope) GetClearWaypoints() *ClearWaypoints {
	if x != nil {
		if x, ok := x.Payload.(*WsEnvelope_ClearWaypoints); ok {
			return x.ClearWaypoints
		}
	}
	return nil
}

func (x *WsEnvelope) GetConfigureMissile() *ConfigureMissile {
	if x != nil {
		if x, ok := x.Payload.(*WsEnvelope_ConfigureMissile); ok {
			return x.ConfigureMissile
		}
	}
	return nil
}

func (x *WsEnvelope) GetAddMissileWaypoint() *AddMissileWaypoint {
	if x != nil {
		if x, ok := x.Payload.(*WsEnvelope_AddMissileWaypoint); ok {
			return x.AddMissileWaypoint
		}
	}
	return nil
}

func (x *WsEnvelope) GetUpdateMissileWaypointSpeed() *UpdateMissileWaypointSpeed {
	if x != nil {
		if x, ok := x.Payload.(*WsEnvelope_UpdateMissileWaypointSpeed); ok {
			return x.UpdateMissileWaypointSpeed
		}
	}
	return nil
}

func (x *WsEnvelope) GetMoveMissileWaypoint() *MoveMissileWaypoint {
	if x != nil {
		if x, ok := x.Payload.(*WsEnvelope_MoveMissileWaypoint); ok {
			return x.MoveMissileWaypoint
		}
	}
	return nil
}

func (x *WsEnvelope) GetDeleteMissileWaypoint() *DeleteMissileWaypoint {
	if x != nil {
		if x, ok := x.Payload.(*WsEnvelope_DeleteMissileWaypoint); ok {
			return x.DeleteMissileWaypoint
		}
	}
	return nil
}

func (x *WsEnvelope) GetClearMissileRoute() *ClearMissileRoute {
	if x != nil {
		if x, ok := x.Payload.(*WsEnvelope_ClearMissileRoute); ok {
			return x.ClearMissileRoute
		}
	}
	return nil
}

func (x *WsEnvelope) GetAddMissileRoute() *AddMissileRoute {
	if x != nil {
		if x, ok := x.Payload.(*WsEnvelope_AddMissileRoute); ok {
			return x.AddMissileRoute
		}
	}
	return nil
}

func (x *WsEnvelope) GetRenameMissileRoute() *RenameMissileRoute {
	if x != nil {
		if x, ok := x.Payload.(*WsEnvelope_RenameMissileRoute); ok {
			return x.RenameMissileRoute
		}
	}
	return nil
}

func (x *WsEnvelope) GetDeleteMissileRoute() *DeleteMissileRoute {
	if x != nil {
		if x, ok := x.Payload.(*WsEnvelope_DeleteMissileRoute); ok {
			return x.DeleteMissileRoute
		}
	}
	return nil
}

func (x *WsEnvelope) GetSetActiveMissileRoute() *SetActiveMissileRoute {
	if x != nil {
		if x, ok := x.Payload.(*WsEnvelope_SetActiveMissileRoute); ok {
			return x.SetActiveMissileRoute
		}
	}
	return nil
}

func (x *WsEnvelope) GetLaunchMissile() *LaunchMissile {
	if x != nil {
		if x, ok := x.Payload.(*WsEnvelope_LaunchMissile); ok {
			return x.LaunchMissile
		}
	}
	return nil
}

func (x *WsEnvelope) GetDagStart() *DagStart {
	if x != nil {
		if x, ok := x.Payload.(*WsEnvelope_DagStart); ok {
			return x.DagStart
		}
	}
	return nil
}

func (x *WsEnvelope) GetDagCancel() *DagCancel {
	if x != nil {
		if x, ok := x.Payload.(*WsEnvelope_DagCancel); ok {
			return x.DagCancel
		}
	}
	return nil
}

func (x *WsEnvelope) GetDagStoryAck() *DagStoryAck {
	if x != nil {
		if x, ok := x.Payload.(*WsEnvelope_DagStoryAck); ok {
			return x.DagStoryAck
		}
	}
	return nil
}

func (x *WsEnvelope) GetDagList() *DagList {
	if x != nil {
		if x, ok := x.Payload.(*WsEnvelope_DagList); ok {
			return x.DagList
		}
	}
	return nil
}

func (x *WsEnvelope) GetMissionSpawnWave() *MissionSpawnWave {
	if x != nil {
		if x, ok := x.Payload.(*WsEnvelope_MissionSpawnWave); ok {
			return x.MissionSpawnWave
		}
	}
	return nil
}

func (x *WsEnvelope) GetMissionStoryEvent() *MissionStoryEvent {
	if x != nil {
		if x, ok := x.Payload.(*WsEnvelope_MissionStoryEvent); ok {
			return x.MissionStoryEvent
		}
	}
	return nil
}

func (x *WsEnvelope) GetDagListResponse() *DagListResponse {
	if x != nil {
		if x, ok := x.Payload.(*WsEnvelope_DagListResponse); ok {
			return x.DagListResponse
		}
	}
	return nil
}

type isWsEnvelope_Payload interface {
	isWsEnvelope_Payload()
}

type WsEnvelope_StateUpdate struct {
	// Server → Client
	StateUpdate *StateUpdate `protobuf:"bytes,1,opt,name=state_update,json=stateUpdate,proto3,oneof"`
}

type WsEnvelope_RoomFull struct {
	RoomFull *RoomFullError `protobuf:"bytes,2,opt,name=room_full,json=roomFull,proto3,oneof"`
}

type WsEnvelope_Join struct {
	// Client → Server
	Join *ClientJoin `protobuf:"bytes,10,opt,name=join,proto3,oneof"`
}

type WsEnvelope_SpawnBot struct {
	SpawnBot *SpawnBot `protobuf:"bytes,11,opt,name=spawn_bot,json=spawnBot,proto3,oneof"`
}

type WsEnvelope_AddWaypoint struct {
	AddWaypoint *AddWaypoint `protobuf:"bytes,12,opt,name=add_waypoint,json=addWaypoint,proto3,oneof"`
}

type WsEnvelope_UpdateWaypoint struct {
	UpdateWaypoint *UpdateWaypoint `protobuf:"bytes,13,opt,name=update_waypoint,json=updateWaypoint,proto3,oneof"`
}

type WsEnvelope_MoveWaypoint struct {
	MoveWaypoint *MoveWaypoint `protobuf:"bytes,14,opt,name=move_waypoint,json=moveWaypoint,proto3,oneof"`
}

type WsEnvelope_DeleteWaypoint struct {
	DeleteWaypoint *DeleteWaypoint `protobuf:"bytes,15,opt,name=delete_waypoint,json=deleteWaypoint,proto3,oneof"`
}

type WsEnvelope_ClearWaypoints struct {
	ClearWaypoints *ClearWaypoints `protobuf:"bytes,16,opt,name=clear_waypoints,json=clearWaypoints,proto3,oneof"`
}

type WsEnvelope_ConfigureMissile struct {
	ConfigureMissile *ConfigureMissile `protobuf:"bytes,17,opt,name=configure_missile,json=configureMissile,proto3,oneof"`
}

type WsEnvelope_AddMissileWaypoint struct {
	AddMissileWaypoint *AddMissileWaypoint `protobuf:"bytes,18,opt,name=add_missile_waypoint,json=addMissileWaypoint,proto3,oneof"`
}

type WsEnvelope_UpdateMissileWaypointSpeed struct {
	UpdateMissileWaypointSpeed *UpdateMissileWaypointSpeed `protobuf:"bytes,19,opt,name=update_missile_waypoint_speed,json=updateMissileWaypointSpeed,proto3,oneof"`
}

type WsEnvelope_MoveMissileWaypoint struct {
	MoveMissileWaypoint *MoveMissileWaypoint `protobuf:"bytes,20,opt,name=move_missile_waypoint,json=moveMissileWaypoint,proto3,oneof"`
}

type WsEnvelope_DeleteMissileWaypoint struct {
	DeleteMissileWaypoint *DeleteMissileWaypoint `protobuf:"bytes,21,opt,name=delete_missile_waypoint,json=deleteMissileWaypoint,proto3,oneof"`
}

type WsEnvelope_ClearMissileRoute struct {
	ClearMissileRoute *ClearMissileRoute `protobuf:"bytes,22,opt,name=clear_missile_route,json=clearMissileRoute,proto3,oneof"`
}

type WsEnvelope_AddMissileRoute struct {
	AddMissileRoute *AddMissileRoute `protobuf:"bytes,23,opt,name=add_missile_route,json=addMissileRoute,proto3,oneof"`
}

type WsEnvelope_RenameMissileRoute struct {
	RenameMissileRoute *RenameMissileRoute `protobuf:"bytes,24,opt,name=rename_missile_route,json=renameMissileRoute,proto3,oneof"`
}

type WsEnvelope_DeleteMissileRoute struct {
	DeleteMissileRoute *DeleteMissileRoute `protobuf:"bytes,25,opt,name=delete_missile_route,json=deleteMissileRoute,proto3,oneof"`
}

type WsEnvelope_SetActiveMissileRoute struct {
	SetActiveMissileRoute *SetActiveMissileRoute `protobuf:"bytes,26,opt,name=set_active_missile_route,json=setActiveMissileRoute,proto3,oneof"`
}

type WsEnvelope_LaunchMissile struct {
	LaunchMissile *LaunchMissile `protobuf:"bytes,27,opt,name=launch_missile,json=launchMissile,proto3,oneof"`
}

type WsEnvelope_DagStart struct {
	// Phase 2: DAG commands
	DagStart *DagStart `protobuf:"bytes,30,opt,name=dag_start,json=dagStart,proto3,oneof"`
}

type WsEnvelope_DagCancel struct {
	DagCancel *DagCancel `protobuf:"bytes,31,opt,name=dag_cancel,json=dagCancel,proto3,oneof"`
}

type WsEnvelope_DagStoryAck struct {
	DagStoryAck *DagStoryAck `protobuf:"bytes,32,opt,name=dag_story_ack,json=dagStoryAck,proto3,oneof"`
}

type WsEnvelope_DagList struct {
	DagList *DagList `protobuf:"bytes,33,opt,name=dag_list,json=dagList,proto3,oneof"`
}

type WsEnvelope_MissionSpawnWave struct {
	// Phase 2: Mission commands
	MissionSpawnWave *MissionSpawnWave `protobuf:"bytes,40,opt,name=mission_spawn_wave,json=missionSpawnWave,proto3,oneof"`
}

type WsEnvelope_MissionStoryEvent struct {
	MissionStoryEvent *MissionStoryEvent `protobuf:"bytes,41,opt,name=mission_story_event,json=missionStoryEvent,proto3,oneof"`
}

type WsEnvelope_DagListResponse struct {
	// Phase 2: Server responses
	DagListResponse *DagListResponse `protobuf:"bytes,50,opt,name=dag_list_response,json=dagListResponse,proto3,oneof"`
}

func (*WsEnvelope_StateUpdate) isWsEnvelope_Payload() {}

func (*WsEnvelope_RoomFull) isWsEnvelope_Payload() {}

func (*WsEnvelope_Join) isWsEnvelope_Payload() {}

func (*WsEnvelope_SpawnBot) isWsEnvelope_Payload() {}

func (*WsEnvelope_AddWaypoint) isWsEnvelope_Payload() {}

func (*WsEnvelope_UpdateWaypoint) isWsEnvelope_Payload() {}

func (*WsEnvelope_MoveWaypoint) isWsEnvelope_Payload() {}

func (*WsEnvelope_DeleteWaypoint) isWsEnvelope_Payload() {}

func (*WsEnvelope_ClearWaypoints) isWsEnvelope_Payload() {}

func (*WsEnvelope_ConfigureMissile) isWsEnvelope_Payload() {}

func (*WsEnvelope_AddMissileWaypoint) isWsEnvelope_Payload() {}

func (*WsEnvelope_UpdateMissileWaypointSpeed) isWsEnvelope_Payload() {}

func (*WsEnvelope_MoveMissileWaypoint) isWsEnvelope_Payload() {}

func (*WsEnvelope_DeleteMissileWaypoint) isWsEnvelope_Payload() {}

func (*WsEnvelope_ClearMissileRoute) isWsEnvelope_Payload() {}

func (*WsEnvelope_AddMissileRoute) isWsEnvelope_Payload() {}

func (*WsEnvelope_RenameMissileRoute) isWsEnvelope_Payload() {}

func (*WsEnvelope_DeleteMissileRoute) isWsEnvelope_Payload() {}

func (*WsEnvelope_SetActiveMissileRoute) isWsEnvelope_Payload() {}

func (*WsEnvelope_LaunchMissile) isWsEnvelope_Payload() {}

func (*WsEnvelope_DagStart) isWsEnvelope_Payload() {}

func (*WsEnvelope_DagCancel) isWsEnvelope_Payload() {}

func (*WsEnvelope_DagStoryAck) isWsEnvelope_Payload() {}

func (*WsEnvelope_DagList) isWsEnvelope_Payload() {}

func (*WsEnvelope_MissionSpawnWave) isWsEnvelope_Payload() {}

func (*WsEnvelope_MissionStoryEvent) isWsEnvelope_Payload() {}

func (*WsEnvelope_DagListResponse) isWsEnvelope_Payload() {}

// Server → Client: Full game state
// Sent every tick (~20Hz) containing the player's view of the game world
// with light-delayed positions of other ships and missiles
type StateUpdate struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	Now                float64                `protobuf:"fixed64,1,opt,name=now,proto3" json:"now,omitempty"`
	Me                 *Ghost                 `protobuf:"bytes,2,opt,name=me,proto3" json:"me,omitempty"`
	Ghosts             []*Ghost               `protobuf:"bytes,3,rep,name=ghosts,proto3" json:"ghosts,omitempty"`
	Meta               *RoomMeta              `protobuf:"bytes,4,opt,name=meta,proto3" json:"meta,omitempty"`
	Missiles           []*Missile             `protobuf:"bytes,5,rep,name=missiles,proto3" json:"missiles,omitempty"`
	MissileConfig      *MissileConfig         `protobuf:"bytes,6,opt,name=missile_config,json=missileConfig,proto3" json:"missile_config,omitempty"`
	MissileWaypoints   []*Waypoint            `protobuf:"bytes,7,rep,name=missile_waypoints,json=missileWaypoints,proto3" json:"missile_waypoints,omitempty"`
	MissileRoutes      []*MissileRoute        `protobuf:"bytes,8,rep,name=missile_routes,json=missileRoutes,proto3" json:"missile_routes,omitempty"`
	ActiveMissileRoute string                 `protobuf:"bytes,9,opt,name=active_missile_route,json=activeMissileRoute,proto3" json:"active_missile_route,omitempty"`
	NextMissileReady   float64                `protobuf:"fixed64,10,opt,name=next_missile_ready,json=nextMissileReady,proto3" json:"next_missile_ready,omitempty"`
	// Phase 2 additions:
	Dag           *DagState   `protobuf:"bytes,11,opt,name=dag,proto3,oneof" json:"dag,omitempty"`
	Inventory     *Inventory  `protobuf:"bytes,12,opt,name=inventory,proto3,oneof" json:"inventory,omitempty"`
	Story         *StoryState `protobuf:"bytes,13,opt,name=story,proto3,oneof" json:"story,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StateUpdate) Reset() {
	*x = StateUpdate{}
	mi := &file_proto_ws_messages_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StateUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateUpdate) ProtoMessage() {}

func (x *StateUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ws_messages_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateUpdate.ProtoReflect.Descriptor instead.
func (*StateUpdate) Descriptor() ([]byte, []int) {
	return file_proto_ws_messages_proto_rawDescGZIP(), []int{1}
}

func (x *StateUpdate) GetNow() float64 {
	if x != nil {
		return x.Now
	}
	return 0
}

func (x *StateUpdate) GetMe() *Ghost {
	if x != nil {
		return x.Me
	}
	return nil
}

func (x *StateUpdate) GetGhosts() []*Ghost {
	if x != nil {
		return x.Ghosts
	}
	return nil
}

func (x *StateUpdate) GetMeta() *RoomMeta {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *StateUpdate) GetMissiles() []*Missile {
	if x != nil {
		return x.Missiles
	}
	return nil
}

func (x *StateUpdate) GetMissileConfig() *MissileConfig {
	if x != nil {
		return x.MissileConfig
	}
	return nil
}

func (x *StateUpdate) GetMissileWaypoints() []*Waypoint {
	if x != nil {
		return x.MissileWaypoints
	}
	return nil
}

func (x *StateUpdate) GetMissileRoutes() []*MissileRoute {
	if x != nil {
		return x.MissileRoutes
	}
	return nil
}

func (x *StateUpdate) GetActiveMissileRoute() string {
	if x != nil {
		return x.ActiveMissileRoute
	}
	return ""
}

func (x *StateUpdate) GetNextMissileReady() float64 {
	if x != nil {
		return x.NextMissileReady
	}
	return 0
}

func (x *StateUpdate) GetDag() *DagState {
	if x != nil {
		return x.Dag
	}
	return nil
}

func (x *StateUpdate) GetInventory() *Inventory {
	if x != nil {
		return x.Inventory
	}
	return nil
}

func (x *StateUpdate) GetStory() *StoryState {
	if x != nil {
		return x.Story
	}
	return nil
}

// Server → Client: Room full error
type RoomFullError struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RoomFullError) Reset() {
	*x = RoomFullError{}
	mi := &file_proto_ws_messages_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RoomFullError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoomFullError) ProtoMessage() {}

func (x *RoomFullError) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ws_messages_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoomFullError.ProtoReflect.Descriptor instead.
func (*RoomFullError) Descriptor() ([]byte, []int) {
	return file_proto_ws_messages_proto_rawDescGZIP(), []int{2}
}

func (x *RoomFullError) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// Client → Server: Join game
type ClientJoin struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Room          string                 `protobuf:"bytes,2,opt,name=room,proto3" json:"room,omitempty"`
	MapW          float64                `protobuf:"fixed64,3,opt,name=map_w,json=mapW,proto3" json:"map_w,omitempty"`
	MapH          float64                `protobuf:"fixed64,4,opt,name=map_h,json=mapH,proto3" json:"map_h,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClientJoin) Reset() {
	*x = ClientJoin{}
	mi := &file_proto_ws_messages_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClientJoin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientJoin) ProtoMessage() {}

func (x *ClientJoin) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ws_messages_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientJoin.ProtoReflect.Descriptor instead.
func (*ClientJoin) Descriptor() ([]byte, []int) {
	return file_proto_ws_messages_proto_rawDescGZIP(), []int{3}
}

func (x *ClientJoin) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ClientJoin) GetRoom() string {
	if x != nil {
		return x.Room
	}
	return ""
}

func (x *ClientJoin) GetMapW() float64 {
	if x != nil {
		return x.MapW
	}
	return 0
}

func (x *ClientJoin) GetMapH() float64 {
	if x != nil {
		return x.MapH
	}
	return 0
}

// Client → Server: Spawn AI bot
type SpawnBot struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SpawnBot) Reset() {
	*x = SpawnBot{}
	mi := &file_proto_ws_messages_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SpawnBot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpawnBot) ProtoMessage() {}

func (x *SpawnBot) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ws_messages_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpawnBot.ProtoReflect.Descriptor instead.
func (*SpawnBot) Descriptor() ([]byte, []int) {
	return file_proto_ws_messages_proto_rawDescGZIP(), []int{4}
}

// Client → Server: Add waypoint to ship route
type AddWaypoint struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	X             float64                `protobuf:"fixed64,1,opt,name=x,proto3" json:"x,omitempty"`
	Y             float64                `protobuf:"fixed64,2,opt,name=y,proto3" json:"y,omitempty"`
	Speed         float64                `protobuf:"fixed64,3,opt,name=speed,proto3" json:"speed,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddWaypoint) Reset() {
	*x = AddWaypoint{}
	mi := &file_proto_ws_messages_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddWaypoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddWaypoint) ProtoMessage() {}

func (x *AddWaypoint) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ws_messages_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddWaypoint.ProtoReflect.Descriptor instead.
func (*AddWaypoint) Descriptor() ([]byte, []int) {
	return file_proto_ws_messages_proto_rawDescGZIP(), []int{5}
}

func (x *AddWaypoint) GetX() float64 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *AddWaypoint) GetY() float64 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *AddWaypoint) GetSpeed() float64 {
	if x != nil {
		return x.Speed
	}
	return 0
}

// Client → Server: Update waypoint speed
type UpdateWaypoint struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Index         int32                  `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	Speed         float64                `protobuf:"fixed64,2,opt,name=speed,proto3" json:"speed,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateWaypoint) Reset() {
	*x = UpdateWaypoint{}
	mi := &file_proto_ws_messages_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateWaypoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateWaypoint) ProtoMessage() {}

func (x *UpdateWaypoint) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ws_messages_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateWaypoint.ProtoReflect.Descriptor instead.
func (*UpdateWaypoint) Descriptor() ([]byte, []int) {
	return file_proto_ws_messages_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateWaypoint) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *UpdateWaypoint) GetSpeed() float64 {
	if x != nil {
		return x.Speed
	}
	return 0
}

// Client → Server: Move waypoint position
type MoveWaypoint struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Index         int32                  `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	X             float64                `protobuf:"fixed64,2,opt,name=x,proto3" json:"x,omitempty"`
	Y             float64                `protobuf:"fixed64,3,opt,name=y,proto3" json:"y,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MoveWaypoint) Reset() {
	*x = MoveWaypoint{}
	mi := &file_proto_ws_messages_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MoveWaypoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoveWaypoint) ProtoMessage() {}

func (x *MoveWaypoint) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ws_messages_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoveWaypoint.ProtoReflect.Descriptor instead.
func (*MoveWaypoint) Descriptor() ([]byte, []int) {
	return file_proto_ws_messages_proto_rawDescGZIP(), []int{7}
}

func (x *MoveWaypoint) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *MoveWaypoint) GetX() float64 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *MoveWaypoint) GetY() float64 {
	if x != nil {
		return x.Y
	}
	return 0
}

// Client → Server: Delete waypoint from route
type DeleteWaypoint struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Index         int32                  `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteWaypoint) Reset() {
	*x = DeleteWaypoint{}
	mi := &file_proto_ws_messages_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteWaypoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteWaypoint) ProtoMessage() {}

func (x *DeleteWaypoint) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ws_messages_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteWaypoint.ProtoReflect.Descriptor instead.
func (*DeleteWaypoint) Descriptor() ([]byte, []int) {
	return file_proto_ws_messages_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteWaypoint) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

// Client → Server: Clear all waypoints
type ClearWaypoints struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClearWaypoints) Reset() {
	*x = ClearWaypoints{}
	mi := &file_proto_ws_messages_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClearWaypoints) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClearWaypoints) ProtoMessage() {}

func (x *ClearWaypoints) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ws_messages_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClearWaypoints.ProtoReflect.Descriptor instead.
func (*ClearWaypoints) Descriptor() ([]byte, []int) {
	return file_proto_ws_messages_proto_rawDescGZIP(), []int{9}
}

// Client → Server: Configure missile parameters
type ConfigureMissile struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MissileSpeed  float64                `protobuf:"fixed64,1,opt,name=missile_speed,json=missileSpeed,proto3" json:"missile_speed,omitempty"`
	MissileAgro   float64                `protobuf:"fixed64,2,opt,name=missile_agro,json=missileAgro,proto3" json:"missile_agro,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConfigureMissile) Reset() {
	*x = ConfigureMissile{}
	mi := &file_proto_ws_messages_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigureMissile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigureMissile) ProtoMessage() {}

func (x *ConfigureMissile) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ws_messages_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigureMissile.ProtoReflect.Descriptor instead.
func (*ConfigureMissile) Descriptor() ([]byte, []int) {
	return file_proto_ws_messages_proto_rawDescGZIP(), []int{10}
}

func (x *ConfigureMissile) GetMissileSpeed() float64 {
	if x != nil {
		return x.MissileSpeed
	}
	return 0
}

func (x *ConfigureMissile) GetMissileAgro() float64 {
	if x != nil {
		return x.MissileAgro
	}
	return 0
}

// Client → Server: Add waypoint to missile route
type AddMissileWaypoint struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RouteId       string                 `protobuf:"bytes,1,opt,name=route_id,json=routeId,proto3" json:"route_id,omitempty"`
	X             float64                `protobuf:"fixed64,2,opt,name=x,proto3" json:"x,omitempty"`
	Y             float64                `protobuf:"fixed64,3,opt,name=y,proto3" json:"y,omitempty"`
	Speed         float64                `protobuf:"fixed64,4,opt,name=speed,proto3" json:"speed,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddMissileWaypoint) Reset() {
	*x = AddMissileWaypoint{}
	mi := &file_proto_ws_messages_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddMissileWaypoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMissileWaypoint) ProtoMessage() {}

func (x *AddMissileWaypoint) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ws_messages_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMissileWaypoint.ProtoReflect.Descriptor instead.
func (*AddMissileWaypoint) Descriptor() ([]byte, []int) {
	return file_proto_ws_messages_proto_rawDescGZIP(), []int{11}
}

func (x *AddMissileWaypoint) GetRouteId() string {
	if x != nil {
		return x.RouteId
	}
	return ""
}

func (x *AddMissileWaypoint) GetX() float64 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *AddMissileWaypoint) GetY() float64 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *AddMissileWaypoint) GetSpeed() float64 {
	if x != nil {
		return x.Speed
	}
	return 0
}

// Client → Server: Update missile waypoint speed
type UpdateMissileWaypointSpeed struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RouteId       string                 `protobuf:"bytes,1,opt,name=route_id,json=routeId,proto3" json:"route_id,omitempty"`
	Index         int32                  `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`
	Speed         float64                `protobuf:"fixed64,3,opt,name=speed,proto3" json:"speed,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateMissileWaypointSpeed) Reset() {
	*x = UpdateMissileWaypointSpeed{}
	mi := &file_proto_ws_messages_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateMissileWaypointSpeed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMissileWaypointSpeed) ProtoMessage() {}

func (x *UpdateMissileWaypointSpeed) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ws_messages_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMissileWaypointSpeed.ProtoReflect.Descriptor instead.
func (*UpdateMissileWaypointSpeed) Descriptor() ([]byte, []int) {
	return file_proto_ws_messages_proto_rawDescGZIP(), []int{12}
}

func (x *UpdateMissileWaypointSpeed) GetRouteId() string {
	if x != nil {
		return x.RouteId
	}
	return ""
}

func (x *UpdateMissileWaypointSpeed) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *UpdateMissileWaypointSpeed) GetSpeed() float64 {
	if x != nil {
		return x.Speed
	}
	return 0
}

// Client → Server: Move missile waypoint position
type MoveMissileWaypoint struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RouteId       string                 `protobuf:"bytes,1,opt,name=route_id,json=routeId,proto3" json:"route_id,omitempty"`
	Index         int32                  `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`
	X             float64                `protobuf:"fixed64,3,opt,name=x,proto3" json:"x,omitempty"`
	Y             float64                `protobuf:"fixed64,4,opt,name=y,proto3" json:"y,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MoveMissileWaypoint) Reset() {
	*x = MoveMissileWaypoint{}
	mi := &file_proto_ws_messages_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MoveMissileWaypoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoveMissileWaypoint) ProtoMessage() {}

func (x *MoveMissileWaypoint) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ws_messages_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoveMissileWaypoint.ProtoReflect.Descriptor instead.
func (*MoveMissileWaypoint) Descriptor() ([]byte, []int) {
	return file_proto_ws_messages_proto_rawDescGZIP(), []int{13}
}

func (x *MoveMissileWaypoint) GetRouteId() string {
	if x != nil {
		return x.RouteId
	}
	return ""
}

func (x *MoveMissileWaypoint) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *MoveMissileWaypoint) GetX() float64 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *MoveMissileWaypoint) GetY() float64 {
	if x != nil {
		return x.Y
	}
	return 0
}

// Client → Server: Delete missile waypoint
type DeleteMissileWaypoint struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RouteId       string                 `protobuf:"bytes,1,opt,name=route_id,json=routeId,proto3" json:"route_id,omitempty"`
	Index         int32                  `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteMissileWaypoint) Reset() {
	*x = DeleteMissileWaypoint{}
	mi := &file_proto_ws_messages_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteMissileWaypoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMissileWaypoint) ProtoMessage() {}

func (x *DeleteMissileWaypoint) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ws_messages_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMissileWaypoint.ProtoReflect.Descriptor instead.
func (*DeleteMissileWaypoint) Descriptor() ([]byte, []int) {
	return file_proto_ws_messages_proto_rawDescGZIP(), []int{14}
}

func (x *DeleteMissileWaypoint) GetRouteId() string {
	if x != nil {
		return x.RouteId
	}
	return ""
}

func (x *DeleteMissileWaypoint) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

// Client → Server: Clear missile route waypoints
type ClearMissileRoute struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RouteId       string                 `protobuf:"bytes,1,opt,name=route_id,json=routeId,proto3" json:"route_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClearMissileRoute) Reset() {
	*x = ClearMissileRoute{}
	mi := &file_proto_ws_messages_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClearMissileRoute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClearMissileRoute) ProtoMessage() {}

func (x *ClearMissileRoute) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ws_messages_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClearMissileRoute.ProtoReflect.Descriptor instead.
func (*ClearMissileRoute) Descriptor() ([]byte, []int) {
	return file_proto_ws_messages_proto_rawDescGZIP(), []int{15}
}

func (x *ClearMissileRoute) GetRouteId() string {
	if x != nil {
		return x.RouteId
	}
	return ""
}

// Client → Server: Create new missile route
type AddMissileRoute struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddMissileRoute) Reset() {
	*x = AddMissileRoute{}
	mi := &file_proto_ws_messages_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddMissileRoute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMissileRoute) ProtoMessage() {}

func (x *AddMissileRoute) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ws_messages_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMissileRoute.ProtoReflect.Descriptor instead.
func (*AddMissileRoute) Descriptor() ([]byte, []int) {
	return file_proto_ws_messages_proto_rawDescGZIP(), []int{16}
}

func (x *AddMissileRoute) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// Client → Server: Rename missile route
type RenameMissileRoute struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RouteId       string                 `protobuf:"bytes,1,opt,name=route_id,json=routeId,proto3" json:"route_id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RenameMissileRoute) Reset() {
	*x = RenameMissileRoute{}
	mi := &file_proto_ws_messages_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RenameMissileRoute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RenameMissileRoute) ProtoMessage() {}

func (x *RenameMissileRoute) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ws_messages_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RenameMissileRoute.ProtoReflect.Descriptor instead.
func (*RenameMissileRoute) Descriptor() ([]byte, []int) {
	return file_proto_ws_messages_proto_rawDescGZIP(), []int{17}
}

func (x *RenameMissileRoute) GetRouteId() string {
	if x != nil {
		return x.RouteId
	}
	return ""
}

func (x *RenameMissileRoute) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// Client → Server: Delete missile route
type DeleteMissileRoute struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RouteId       string                 `protobuf:"bytes,1,opt,name=route_id,json=routeId,proto3" json:"route_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteMissileRoute) Reset() {
	*x = DeleteMissileRoute{}
	mi := &file_proto_ws_messages_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteMissileRoute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMissileRoute) ProtoMessage() {}

func (x *DeleteMissileRoute) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ws_messages_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMissileRoute.ProtoReflect.Descriptor instead.
func (*DeleteMissileRoute) Descriptor() ([]byte, []int) {
	return file_proto_ws_messages_proto_rawDescGZIP(), []int{18}
}

func (x *DeleteMissileRoute) GetRouteId() string {
	if x != nil {
		return x.RouteId
	}
	return ""
}

// Client → Server: Set active missile route
type SetActiveMissileRoute struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RouteId       string                 `protobuf:"bytes,1,opt,name=route_id,json=routeId,proto3" json:"route_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetActiveMissileRoute) Reset() {
	*x = SetActiveMissileRoute{}
	mi := &file_proto_ws_messages_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetActiveMissileRoute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetActiveMissileRoute) ProtoMessage() {}

func (x *SetActiveMissileRoute) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ws_messages_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetActiveMissileRoute.ProtoReflect.Descriptor instead.
func (*SetActiveMissileRoute) Descriptor() ([]byte, []int) {
	return file_proto_ws_messages_proto_rawDescGZIP(), []int{19}
}

func (x *SetActiveMissileRoute) GetRouteId() string {
	if x != nil {
		return x.RouteId
	}
	return ""
}

// Client → Server: Launch missile on route
type LaunchMissile struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RouteId       string                 `protobuf:"bytes,1,opt,name=route_id,json=routeId,proto3" json:"route_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LaunchMissile) Reset() {
	*x = LaunchMissile{}
	mi := &file_proto_ws_messages_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LaunchMissile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LaunchMissile) ProtoMessage() {}

func (x *LaunchMissile) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ws_messages_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LaunchMissile.ProtoReflect.Descriptor instead.
func (*LaunchMissile) Descriptor() ([]byte, []int) {
	return file_proto_ws_messages_proto_rawDescGZIP(), []int{20}
}

func (x *LaunchMissile) GetRouteId() string {
	if x != nil {
		return x.RouteId
	}
	return ""
}

// Ship/ghost snapshot with position, velocity, and state
type Ghost struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	Id                   string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	X                    float64                `protobuf:"fixed64,2,opt,name=x,proto3" json:"x,omitempty"`
	Y                    float64                `protobuf:"fixed64,3,opt,name=y,proto3" json:"y,omitempty"`
	Vx                   float64                `protobuf:"fixed64,4,opt,name=vx,proto3" json:"vx,omitempty"`
	Vy                   float64                `protobuf:"fixed64,5,opt,name=vy,proto3" json:"vy,omitempty"`
	T                    float64                `protobuf:"fixed64,6,opt,name=t,proto3" json:"t,omitempty"`
	Self                 bool                   `protobuf:"varint,7,opt,name=self,proto3" json:"self,omitempty"`
	Waypoints            []*Waypoint            `protobuf:"bytes,8,rep,name=waypoints,proto3" json:"waypoints,omitempty"`
	CurrentWaypointIndex int32                  `protobuf:"varint,9,opt,name=current_waypoint_index,json=currentWaypointIndex,proto3" json:"current_waypoint_index,omitempty"`
	Hp                   int32                  `protobuf:"varint,10,opt,name=hp,proto3" json:"hp,omitempty"`
	Kills                int32                  `protobuf:"varint,11,opt,name=kills,proto3" json:"kills,omitempty"`
	Heat                 *ShipHeatView          `protobuf:"bytes,12,opt,name=heat,proto3,oneof" json:"heat,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *Ghost) Reset() {
	*x = Ghost{}
	mi := &file_proto_ws_messages_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Ghost) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ghost) ProtoMessage() {}

func (x *Ghost) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ws_messages_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ghost.ProtoReflect.Descriptor instead.
func (*Ghost) Descriptor() ([]byte, []int) {
	return file_proto_ws_messages_proto_rawDescGZIP(), []int{21}
}

func (x *Ghost) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Ghost) GetX() float64 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *Ghost) GetY() float64 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *Ghost) GetVx() float64 {
	if x != nil {
		return x.Vx
	}
	return 0
}

func (x *Ghost) GetVy() float64 {
	if x != nil {
		return x.Vy
	}
	return 0
}

func (x *Ghost) GetT() float64 {
	if x != nil {
		return x.T
	}
	return 0
}

func (x *Ghost) GetSelf() bool {
	if x != nil {
		return x.Self
	}
	return false
}

func (x *Ghost) GetWaypoints() []*Waypoint {
	if x != nil {
		return x.Waypoints
	}
	return nil
}

func (x *Ghost) GetCurrentWaypointIndex() int32 {
	if x != nil {
		return x.CurrentWaypointIndex
	}
	return 0
}

func (x *Ghost) GetHp() int32 {
	if x != nil {
		return x.Hp
	}
	return 0
}

func (x *Ghost) GetKills() int32 {
	if x != nil {
		return x.Kills
	}
	return 0
}

func (x *Ghost) GetHeat() *ShipHeatView {
	if x != nil {
		return x.Heat
	}
	return nil
}

// Waypoint with position and target speed
type Waypoint struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	X             float64                `protobuf:"fixed64,1,opt,name=x,proto3" json:"x,omitempty"`
	Y             float64                `protobuf:"fixed64,2,opt,name=y,proto3" json:"y,omitempty"`
	Speed         float64                `protobuf:"fixed64,3,opt,name=speed,proto3" json:"speed,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Waypoint) Reset() {
	*x = Waypoint{}
	mi := &file_proto_ws_messages_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Waypoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Waypoint) ProtoMessage() {}

func (x *Waypoint) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ws_messages_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Waypoint.ProtoReflect.Descriptor instead.
func (*Waypoint) Descriptor() ([]byte, []int) {
	return file_proto_ws_messages_proto_rawDescGZIP(), []int{22}
}

func (x *Waypoint) GetX() float64 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *Waypoint) GetY() float64 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *Waypoint) GetSpeed() float64 {
	if x != nil {
		return x.Speed
	}
	return 0
}

// Room constants (speed of light, world dimensions)
type RoomMeta struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	C             float64                `protobuf:"fixed64,1,opt,name=c,proto3" json:"c,omitempty"` // Speed of light
	W             float64                `protobuf:"fixed64,2,opt,name=w,proto3" json:"w,omitempty"` // World width
	H             float64                `protobuf:"fixed64,3,opt,name=h,proto3" json:"h,omitempty"` // World height
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RoomMeta) Reset() {
	*x = RoomMeta{}
	mi := &file_proto_ws_messages_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RoomMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoomMeta) ProtoMessage() {}

func (x *RoomMeta) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ws_messages_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoomMeta.ProtoReflect.Descriptor instead.
func (*RoomMeta) Descriptor() ([]byte, []int) {
	return file_proto_ws_messages_proto_rawDescGZIP(), []int{23}
}

func (x *RoomMeta) GetC() float64 {
	if x != nil {
		return x.C
	}
	return 0
}

func (x *RoomMeta) GetW() float64 {
	if x != nil {
		return x.W
	}
	return 0
}

func (x *RoomMeta) GetH() float64 {
	if x != nil {
		return x.H
	}
	return 0
}

// Missile snapshot with position, velocity, and targeting
type Missile struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Owner         string                 `protobuf:"bytes,2,opt,name=owner,proto3" json:"owner,omitempty"`
	Self          bool                   `protobuf:"varint,3,opt,name=self,proto3" json:"self,omitempty"`
	X             float64                `protobuf:"fixed64,4,opt,name=x,proto3" json:"x,omitempty"`
	Y             float64                `protobuf:"fixed64,5,opt,name=y,proto3" json:"y,omitempty"`
	Vx            float64                `protobuf:"fixed64,6,opt,name=vx,proto3" json:"vx,omitempty"`
	Vy            float64                `protobuf:"fixed64,7,opt,name=vy,proto3" json:"vy,omitempty"`
	T             float64                `protobuf:"fixed64,8,opt,name=t,proto3" json:"t,omitempty"`
	AgroRadius    float64                `protobuf:"fixed64,9,opt,name=agro_radius,json=agroRadius,proto3" json:"agro_radius,omitempty"`
	Lifetime      float64                `protobuf:"fixed64,10,opt,name=lifetime,proto3" json:"lifetime,omitempty"`
	LaunchTime    float64                `protobuf:"fixed64,11,opt,name=launch_time,json=launchTime,proto3" json:"launch_time,omitempty"`
	ExpiresAt     float64                `protobuf:"fixed64,12,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	TargetId      string                 `protobuf:"bytes,13,opt,name=target_id,json=targetId,proto3" json:"target_id,omitempty"`
	Heat          *ShipHeatView          `protobuf:"bytes,14,opt,name=heat,proto3,oneof" json:"heat,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Missile) Reset() {
	*x = Missile{}
	mi := &file_proto_ws_messages_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Missile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Missile) ProtoMessage() {}

func (x *Missile) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ws_messages_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Missile.ProtoReflect.Descriptor instead.
func (*Missile) Descriptor() ([]byte, []int) {
	return file_proto_ws_messages_proto_rawDescGZIP(), []int{24}
}

func (x *Missile) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Missile) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *Missile) GetSelf() bool {
	if x != nil {
		return x.Self
	}
	return false
}

func (x *Missile) GetX() float64 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *Missile) GetY() float64 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *Missile) GetVx() float64 {
	if x != nil {
		return x.Vx
	}
	return 0
}

func (x *Missile) GetVy() float64 {
	if x != nil {
		return x.Vy
	}
	return 0
}

func (x *Missile) GetT() float64 {
	if x != nil {
		return x.T
	}
	return 0
}

func (x *Missile) GetAgroRadius() float64 {
	if x != nil {
		return x.AgroRadius
	}
	return 0
}

func (x *Missile) GetLifetime() float64 {
	if x != nil {
		return x.Lifetime
	}
	return 0
}

func (x *Missile) GetLaunchTime() float64 {
	if x != nil {
		return x.LaunchTime
	}
	return 0
}

func (x *Missile) GetExpiresAt() float64 {
	if x != nil {
		return x.ExpiresAt
	}
	return 0
}

func (x *Missile) GetTargetId() string {
	if x != nil {
		return x.TargetId
	}
	return ""
}

func (x *Missile) GetHeat() *ShipHeatView {
	if x != nil {
		return x.Heat
	}
	return nil
}

// Missile configuration parameters
type MissileConfig struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Speed         float64                `protobuf:"fixed64,1,opt,name=speed,proto3" json:"speed,omitempty"`
	SpeedMin      float64                `protobuf:"fixed64,2,opt,name=speed_min,json=speedMin,proto3" json:"speed_min,omitempty"`
	SpeedMax      float64                `protobuf:"fixed64,3,opt,name=speed_max,json=speedMax,proto3" json:"speed_max,omitempty"`
	AgroMin       float64                `protobuf:"fixed64,4,opt,name=agro_min,json=agroMin,proto3" json:"agro_min,omitempty"`
	AgroRadius    float64                `protobuf:"fixed64,5,opt,name=agro_radius,json=agroRadius,proto3" json:"agro_radius,omitempty"`
	Lifetime      float64                `protobuf:"fixed64,6,opt,name=lifetime,proto3" json:"lifetime,omitempty"`
	HeatConfig    *HeatParams            `protobuf:"bytes,7,opt,name=heat_config,json=heatConfig,proto3,oneof" json:"heat_config,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MissileConfig) Reset() {
	*x = MissileConfig{}
	mi := &file_proto_ws_messages_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MissileConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MissileConfig) ProtoMessage() {}

func (x *MissileConfig) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ws_messages_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MissileConfig.ProtoReflect.Descriptor instead.
func (*MissileConfig) Descriptor() ([]byte, []int) {
	return file_proto_ws_messages_proto_rawDescGZIP(), []int{25}
}

func (x *MissileConfig) GetSpeed() float64 {
	if x != nil {
		return x.Speed
	}
	return 0
}

func (x *MissileConfig) GetSpeedMin() float64 {
	if x != nil {
		return x.SpeedMin
	}
	return 0
}

func (x *MissileConfig) GetSpeedMax() float64 {
	if x != nil {
		return x.SpeedMax
	}
	return 0
}

func (x *MissileConfig) GetAgroMin() float64 {
	if x != nil {
		return x.AgroMin
	}
	return 0
}

func (x *MissileConfig) GetAgroRadius() float64 {
	if x != nil {
		return x.AgroRadius
	}
	return 0
}

func (x *MissileConfig) GetLifetime() float64 {
	if x != nil {
		return x.Lifetime
	}
	return 0
}

func (x *MissileConfig) GetHeatConfig() *HeatParams {
	if x != nil {
		return x.HeatConfig
	}
	return nil
}

// Missile route definition
type MissileRoute struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Waypoints     []*Waypoint            `protobuf:"bytes,3,rep,name=waypoints,proto3" json:"waypoints,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MissileRoute) Reset() {
	*x = MissileRoute{}
	mi := &file_proto_ws_messages_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MissileRoute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MissileRoute) ProtoMessage() {}

func (x *MissileRoute) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ws_messages_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MissileRoute.ProtoReflect.Descriptor instead.
func (*MissileRoute) Descriptor() ([]byte, []int) {
	return file_proto_ws_messages_proto_rawDescGZIP(), []int{26}
}

func (x *MissileRoute) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *MissileRoute) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MissileRoute) GetWaypoints() []*Waypoint {
	if x != nil {
		return x.Waypoints
	}
	return nil
}

// Heat view (abbreviated field names match JSON)
// Used for both ships and missiles
type ShipHeatView struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	V             float64                `protobuf:"fixed64,1,opt,name=v,proto3" json:"v,omitempty"`   // value
	M             float64                `protobuf:"fixed64,2,opt,name=m,proto3" json:"m,omitempty"`   // max
	W             float64                `protobuf:"fixed64,3,opt,name=w,proto3" json:"w,omitempty"`   // warnAt
	O             float64                `protobuf:"fixed64,4,opt,name=o,proto3" json:"o,omitempty"`   // overheatAt
	Ms            float64                `protobuf:"fixed64,5,opt,name=ms,proto3" json:"ms,omitempty"` // markerSpeed
	Su            float64                `protobuf:"fixed64,6,opt,name=su,proto3" json:"su,omitempty"` // stallUntil
	Ku            float64                `protobuf:"fixed64,7,opt,name=ku,proto3" json:"ku,omitempty"` // kUp
	Kd            float64                `protobuf:"fixed64,8,opt,name=kd,proto3" json:"kd,omitempty"` // kDown
	Ex            float64                `protobuf:"fixed64,9,opt,name=ex,proto3" json:"ex,omitempty"` // exp
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ShipHeatView) Reset() {
	*x = ShipHeatView{}
	mi := &file_proto_ws_messages_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ShipHeatView) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShipHeatView) ProtoMessage() {}

func (x *ShipHeatView) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ws_messages_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShipHeatView.ProtoReflect.Descriptor instead.
func (*ShipHeatView) Descriptor() ([]byte, []int) {
	return file_proto_ws_messages_proto_rawDescGZIP(), []int{27}
}

func (x *ShipHeatView) GetV() float64 {
	if x != nil {
		return x.V
	}
	return 0
}

func (x *ShipHeatView) GetM() float64 {
	if x != nil {
		return x.M
	}
	return 0
}

func (x *ShipHeatView) GetW() float64 {
	if x != nil {
		return x.W
	}
	return 0
}

func (x *ShipHeatView) GetO() float64 {
	if x != nil {
		return x.O
	}
	return 0
}

func (x *ShipHeatView) GetMs() float64 {
	if x != nil {
		return x.Ms
	}
	return 0
}

func (x *ShipHeatView) GetSu() float64 {
	if x != nil {
		return x.Su
	}
	return 0
}

func (x *ShipHeatView) GetKu() float64 {
	if x != nil {
		return x.Ku
	}
	return 0
}

func (x *ShipHeatView) GetKd() float64 {
	if x != nil {
		return x.Kd
	}
	return 0
}

func (x *ShipHeatView) GetEx() float64 {
	if x != nil {
		return x.Ex
	}
	return 0
}

// Heat configuration parameters
type HeatParams struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Max           float64                `protobuf:"fixed64,1,opt,name=max,proto3" json:"max,omitempty"`
	WarnAt        float64                `protobuf:"fixed64,2,opt,name=warn_at,json=warnAt,proto3" json:"warn_at,omitempty"`
	OverheatAt    float64                `protobuf:"fixed64,3,opt,name=overheat_at,json=overheatAt,proto3" json:"overheat_at,omitempty"`
	MarkerSpeed   float64                `protobuf:"fixed64,4,opt,name=marker_speed,json=markerSpeed,proto3" json:"marker_speed,omitempty"`
	KUp           float64                `protobuf:"fixed64,5,opt,name=k_up,json=kUp,proto3" json:"k_up,omitempty"`
	KDown         float64                `protobuf:"fixed64,6,opt,name=k_down,json=kDown,proto3" json:"k_down,omitempty"`
	Exp           float64                `protobuf:"fixed64,7,opt,name=exp,proto3" json:"exp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HeatParams) Reset() {
	*x = HeatParams{}
	mi := &file_proto_ws_messages_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HeatParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeatParams) ProtoMessage() {}

func (x *HeatParams) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ws_messages_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeatParams.ProtoReflect.Descriptor instead.
func (*HeatParams) Descriptor() ([]byte, []int) {
	return file_proto_ws_messages_proto_rawDescGZIP(), []int{28}
}

func (x *HeatParams) GetMax() float64 {
	if x != nil {
		return x.Max
	}
	return 0
}

func (x *HeatParams) GetWarnAt() float64 {
	if x != nil {
		return x.WarnAt
	}
	return 0
}

func (x *HeatParams) GetOverheatAt() float64 {
	if x != nil {
		return x.OverheatAt
	}
	return 0
}

func (x *HeatParams) GetMarkerSpeed() float64 {
	if x != nil {
		return x.MarkerSpeed
	}
	return 0
}

func (x *HeatParams) GetKUp() float64 {
	if x != nil {
		return x.KUp
	}
	return 0
}

func (x *HeatParams) GetKDown() float64 {
	if x != nil {
		return x.KDown
	}
	return 0
}

func (x *HeatParams) GetExp() float64 {
	if x != nil {
		return x.Exp
	}
	return 0
}

// DAG node state
type DagNode struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Kind          DagNodeKind            `protobuf:"varint,2,opt,name=kind,proto3,enum=lightspeedduel.ws.DagNodeKind" json:"kind,omitempty"`
	Label         string                 `protobuf:"bytes,3,opt,name=label,proto3" json:"label,omitempty"`
	Status        DagNodeStatus          `protobuf:"varint,4,opt,name=status,proto3,enum=lightspeedduel.ws.DagNodeStatus" json:"status,omitempty"`
	RemainingS    float64                `protobuf:"fixed64,5,opt,name=remaining_s,json=remainingS,proto3" json:"remaining_s,omitempty"` // Time remaining for in-progress jobs
	DurationS     float64                `protobuf:"fixed64,6,opt,name=duration_s,json=durationS,proto3" json:"duration_s,omitempty"`    // Total duration
	Repeatable    bool                   `protobuf:"varint,7,opt,name=repeatable,proto3" json:"repeatable,omitempty"`                    // Can be repeated after completion
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DagNode) Reset() {
	*x = DagNode{}
	mi := &file_proto_ws_messages_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DagNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DagNode) ProtoMessage() {}

func (x *DagNode) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ws_messages_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DagNode.ProtoReflect.Descriptor instead.
func (*DagNode) Descriptor() ([]byte, []int) {
	return file_proto_ws_messages_proto_rawDescGZIP(), []int{29}
}

func (x *DagNode) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DagNode) GetKind() DagNodeKind {
	if x != nil {
		return x.Kind
	}
	return DagNodeKind_DAG_NODE_KIND_UNSPECIFIED
}

func (x *DagNode) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *DagNode) GetStatus() DagNodeStatus {
	if x != nil {
		return x.Status
	}
	return DagNodeStatus_DAG_NODE_STATUS_UNSPECIFIED
}

func (x *DagNode) GetRemainingS() float64 {
	if x != nil {
		return x.RemainingS
	}
	return 0
}

func (x *DagNode) GetDurationS() float64 {
	if x != nil {
		return x.DurationS
	}
	return 0
}

func (x *DagNode) GetRepeatable() bool {
	if x != nil {
		return x.Repeatable
	}
	return false
}

// Full DAG state
type DagState struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Nodes         []*DagNode             `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DagState) Reset() {
	*x = DagState{}
	mi := &file_proto_ws_messages_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DagState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DagState) ProtoMessage() {}

func (x *DagState) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ws_messages_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DagState.ProtoReflect.Descriptor instead.
func (*DagState) Descriptor() ([]byte, []int) {
	return file_proto_ws_messages_proto_rawDescGZIP(), []int{30}
}

func (x *DagState) GetNodes() []*DagNode {
	if x != nil {
		return x.Nodes
	}
	return nil
}

// Client → Server: Start a DAG node
type DagStart struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NodeId        string                 `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DagStart) Reset() {
	*x = DagStart{}
	mi := &file_proto_ws_messages_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DagStart) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DagStart) ProtoMessage() {}

func (x *DagStart) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ws_messages_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DagStart.ProtoReflect.Descriptor instead.
func (*DagStart) Descriptor() ([]byte, []int) {
	return file_proto_ws_messages_proto_rawDescGZIP(), []int{31}
}

func (x *DagStart) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

// Client → Server: Cancel a DAG node
type DagCancel struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NodeId        string                 `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DagCancel) Reset() {
	*x = DagCancel{}
	mi := &file_proto_ws_messages_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DagCancel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DagCancel) ProtoMessage() {}

func (x *DagCancel) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ws_messages_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DagCancel.ProtoReflect.Descriptor instead.
func (*DagCancel) Descriptor() ([]byte, []int) {
	return file_proto_ws_messages_proto_rawDescGZIP(), []int{32}
}

func (x *DagCancel) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

// Client → Server: Acknowledge story dialogue
type DagStoryAck struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NodeId        string                 `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	ChoiceId      string                 `protobuf:"bytes,2,opt,name=choice_id,json=choiceId,proto3" json:"choice_id,omitempty"` // Empty if just continue (no choice)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DagStoryAck) Reset() {
	*x = DagStoryAck{}
	mi := &file_proto_ws_messages_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DagStoryAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DagStoryAck) ProtoMessage() {}

func (x *DagStoryAck) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ws_messages_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DagStoryAck.ProtoReflect.Descriptor instead.
func (*DagStoryAck) Descriptor() ([]byte, []int) {
	return file_proto_ws_messages_proto_rawDescGZIP(), []int{33}
}

func (x *DagStoryAck) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *DagStoryAck) GetChoiceId() string {
	if x != nil {
		return x.ChoiceId
	}
	return ""
}

// Client → Server: Request full DAG list
type DagList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DagList) Reset() {
	*x = DagList{}
	mi := &file_proto_ws_messages_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DagList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DagList) ProtoMessage() {}

func (x *DagList) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ws_messages_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DagList.ProtoReflect.Descriptor instead.
func (*DagList) Descriptor() ([]byte, []int) {
	return file_proto_ws_messages_proto_rawDescGZIP(), []int{34}
}

// Server → Client: DAG list response
type DagListResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Dag           *DagState              `protobuf:"bytes,1,opt,name=dag,proto3" json:"dag,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DagListResponse) Reset() {
	*x = DagListResponse{}
	mi := &file_proto_ws_messages_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DagListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DagListResponse) ProtoMessage() {}

func (x *DagListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ws_messages_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DagListResponse.ProtoReflect.Descriptor instead.
func (*DagListResponse) Descriptor() ([]byte, []int) {
	return file_proto_ws_messages_proto_rawDescGZIP(), []int{35}
}

func (x *DagListResponse) GetDag() *DagState {
	if x != nil {
		return x.Dag
	}
	return nil
}

// Inventory item
type InventoryItem struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          string                 `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`                                       // "missile", "component", etc.
	VariantId     string                 `protobuf:"bytes,2,opt,name=variant_id,json=variantId,proto3" json:"variant_id,omitempty"`            // Specific variant identifier
	HeatCapacity  float64                `protobuf:"fixed64,3,opt,name=heat_capacity,json=heatCapacity,proto3" json:"heat_capacity,omitempty"` // Heat capacity for this item
	Quantity      int32                  `protobuf:"varint,4,opt,name=quantity,proto3" json:"quantity,omitempty"`                              // Stack quantity
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InventoryItem) Reset() {
	*x = InventoryItem{}
	mi := &file_proto_ws_messages_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InventoryItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InventoryItem) ProtoMessage() {}

func (x *InventoryItem) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ws_messages_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InventoryItem.ProtoReflect.Descriptor instead.
func (*InventoryItem) Descriptor() ([]byte, []int) {
	return file_proto_ws_messages_proto_rawDescGZIP(), []int{36}
}

func (x *InventoryItem) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *InventoryItem) GetVariantId() string {
	if x != nil {
		return x.VariantId
	}
	return ""
}

func (x *InventoryItem) GetHeatCapacity() float64 {
	if x != nil {
		return x.HeatCapacity
	}
	return 0
}

func (x *InventoryItem) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

// Player inventory
type Inventory struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Items         []*InventoryItem       `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Inventory) Reset() {
	*x = Inventory{}
	mi := &file_proto_ws_messages_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Inventory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Inventory) ProtoMessage() {}

func (x *Inventory) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ws_messages_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Inventory.ProtoReflect.Descriptor instead.
func (*Inventory) Descriptor() ([]byte, []int) {
	return file_proto_ws_messages_proto_rawDescGZIP(), []int{37}
}

func (x *Inventory) GetItems() []*InventoryItem {
	if x != nil {
		return x.Items
	}
	return nil
}

// Story dialogue choice option
type StoryDialogueChoice struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Text          string                 `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StoryDialogueChoice) Reset() {
	*x = StoryDialogueChoice{}
	mi := &file_proto_ws_messages_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StoryDialogueChoice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoryDialogueChoice) ProtoMessage() {}

func (x *StoryDialogueChoice) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ws_messages_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoryDialogueChoice.ProtoReflect.Descriptor instead.
func (*StoryDialogueChoice) Descriptor() ([]byte, []int) {
	return file_proto_ws_messages_proto_rawDescGZIP(), []int{38}
}

func (x *StoryDialogueChoice) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *StoryDialogueChoice) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

// Story tutorial tip
type StoryTutorialTip struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Title         string                 `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Text          string                 `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StoryTutorialTip) Reset() {
	*x = StoryTutorialTip{}
	mi := &file_proto_ws_messages_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StoryTutorialTip) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoryTutorialTip) ProtoMessage() {}

func (x *StoryTutorialTip) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ws_messages_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoryTutorialTip.ProtoReflect.Descriptor instead.
func (*StoryTutorialTip) Descriptor() ([]byte, []int) {
	return file_proto_ws_messages_proto_rawDescGZIP(), []int{39}
}

func (x *StoryTutorialTip) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *StoryTutorialTip) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

// Story dialogue content
type StoryDialogue struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Speaker       string                 `protobuf:"bytes,1,opt,name=speaker,proto3" json:"speaker,omitempty"`
	Text          string                 `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	Intent        StoryIntent            `protobuf:"varint,3,opt,name=intent,proto3,enum=lightspeedduel.ws.StoryIntent" json:"intent,omitempty"`
	ContinueLabel string                 `protobuf:"bytes,4,opt,name=continue_label,json=continueLabel,proto3" json:"continue_label,omitempty"` // Empty = default "Continue"
	Choices       []*StoryDialogueChoice `protobuf:"bytes,5,rep,name=choices,proto3" json:"choices,omitempty"`                                  // Empty = show continue button
	TutorialTip   *StoryTutorialTip      `protobuf:"bytes,6,opt,name=tutorial_tip,json=tutorialTip,proto3,oneof" json:"tutorial_tip,omitempty"` // Optional gameplay hint
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StoryDialogue) Reset() {
	*x = StoryDialogue{}
	mi := &file_proto_ws_messages_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StoryDialogue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoryDialogue) ProtoMessage() {}

func (x *StoryDialogue) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ws_messages_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoryDialogue.ProtoReflect.Descriptor instead.
func (*StoryDialogue) Descriptor() ([]byte, []int) {
	return file_proto_ws_messages_proto_rawDescGZIP(), []int{40}
}

func (x *StoryDialogue) GetSpeaker() string {
	if x != nil {
		return x.Speaker
	}
	return ""
}

func (x *StoryDialogue) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *StoryDialogue) GetIntent() StoryIntent {
	if x != nil {
		return x.Intent
	}
	return StoryIntent_STORY_INTENT_UNSPECIFIED
}

func (x *StoryDialogue) GetContinueLabel() string {
	if x != nil {
		return x.ContinueLabel
	}
	return ""
}

func (x *StoryDialogue) GetChoices() []*StoryDialogueChoice {
	if x != nil {
		return x.Choices
	}
	return nil
}

func (x *StoryDialogue) GetTutorialTip() *StoryTutorialTip {
	if x != nil {
		return x.TutorialTip
	}
	return nil
}

// Story event (history entry)
type StoryEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChapterId     string                 `protobuf:"bytes,1,opt,name=chapter_id,json=chapterId,proto3" json:"chapter_id,omitempty"`
	NodeId        string                 `protobuf:"bytes,2,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	Timestamp     float64                `protobuf:"fixed64,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StoryEvent) Reset() {
	*x = StoryEvent{}
	mi := &file_proto_ws_messages_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StoryEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoryEvent) ProtoMessage() {}

func (x *StoryEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ws_messages_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoryEvent.ProtoReflect.Descriptor instead.
func (*StoryEvent) Descriptor() ([]byte, []int) {
	return file_proto_ws_messages_proto_rawDescGZIP(), []int{41}
}

func (x *StoryEvent) GetChapterId() string {
	if x != nil {
		return x.ChapterId
	}
	return ""
}

func (x *StoryEvent) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *StoryEvent) GetTimestamp() float64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

// Story state
type StoryState struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ActiveNode    string                 `protobuf:"bytes,1,opt,name=active_node,json=activeNode,proto3" json:"active_node,omitempty"`                                                // Currently active story node ID
	Dialogue      *StoryDialogue         `protobuf:"bytes,2,opt,name=dialogue,proto3,oneof" json:"dialogue,omitempty"`                                                                // Full dialogue content
	Available     []string               `protobuf:"bytes,3,rep,name=available,proto3" json:"available,omitempty"`                                                                    // Available story node IDs
	Flags         map[string]bool        `protobuf:"bytes,4,rep,name=flags,proto3" json:"flags,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"` // Story flags for branching
	RecentEvents  []*StoryEvent          `protobuf:"bytes,5,rep,name=recent_events,json=recentEvents,proto3" json:"recent_events,omitempty"`                                          // Recent story events
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StoryState) Reset() {
	*x = StoryState{}
	mi := &file_proto_ws_messages_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StoryState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoryState) ProtoMessage() {}

func (x *StoryState) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ws_messages_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoryState.ProtoReflect.Descriptor instead.
func (*StoryState) Descriptor() ([]byte, []int) {
	return file_proto_ws_messages_proto_rawDescGZIP(), []int{42}
}

func (x *StoryState) GetActiveNode() string {
	if x != nil {
		return x.ActiveNode
	}
	return ""
}

func (x *StoryState) GetDialogue() *StoryDialogue {
	if x != nil {
		return x.Dialogue
	}
	return nil
}

func (x *StoryState) GetAvailable() []string {
	if x != nil {
		return x.Available
	}
	return nil
}

func (x *StoryState) GetFlags() map[string]bool {
	if x != nil {
		return x.Flags
	}
	return nil
}

func (x *StoryState) GetRecentEvents() []*StoryEvent {
	if x != nil {
		return x.RecentEvents
	}
	return nil
}

// Client → Server: Spawn mission wave
type MissionSpawnWave struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WaveIndex     int32                  `protobuf:"varint,1,opt,name=wave_index,json=waveIndex,proto3" json:"wave_index,omitempty"` // 1, 2, or 3
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MissionSpawnWave) Reset() {
	*x = MissionSpawnWave{}
	mi := &file_proto_ws_messages_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MissionSpawnWave) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MissionSpawnWave) ProtoMessage() {}

func (x *MissionSpawnWave) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ws_messages_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MissionSpawnWave.ProtoReflect.Descriptor instead.
func (*MissionSpawnWave) Descriptor() ([]byte, []int) {
	return file_proto_ws_messages_proto_rawDescGZIP(), []int{43}
}

func (x *MissionSpawnWave) GetWaveIndex() int32 {
	if x != nil {
		return x.WaveIndex
	}
	return 0
}

// Client → Server: Trigger mission story event
type MissionStoryEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Event         string                 `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"`    // e.g. "mission:start", "mission:beacon-locked"
	Beacon        int32                  `protobuf:"varint,2,opt,name=beacon,proto3" json:"beacon,omitempty"` // Beacon index for beacon-specific events
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MissionStoryEvent) Reset() {
	*x = MissionStoryEvent{}
	mi := &file_proto_ws_messages_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MissionStoryEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MissionStoryEvent) ProtoMessage() {}

func (x *MissionStoryEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ws_messages_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MissionStoryEvent.ProtoReflect.Descriptor instead.
func (*MissionStoryEvent) Descriptor() ([]byte, []int) {
	return file_proto_ws_messages_proto_rawDescGZIP(), []int{44}
}

func (x *MissionStoryEvent) GetEvent() string {
	if x != nil {
		return x.Event
	}
	return ""
}

func (x *MissionStoryEvent) GetBeacon() int32 {
	if x != nil {
		return x.Beacon
	}
	return 0
}

var File_proto_ws_messages_proto protoreflect.FileDescriptor

const file_proto_ws_messages_proto_rawDesc = "" +
	"\n" +
	"\x17proto/ws_messages.proto\x12\x11lightspeedduel.ws\"\xf3\x10\n" +
	"\n" +
	"WsEnvelope\x12C\n" +
	"\fstate_update\x18\x01 \x01(\v2\x1e.lightspeedduel.ws.StateUpdateH\x00R\vstateUpdate\x12?\n" +
	"\troom_full\x18\x02 \x01(\v2 .lightspeedduel.ws.RoomFullErrorH\x00R\broomFull\x123\n" +
	"\x04join\x18\n" +
	" \x01(\v2\x1d.lightspeedduel.ws.ClientJoinH\x00R\x04join\x12:\n" +
	"\tspawn_bot\x18\v \x01(\v2\x1b.lightspeedduel.ws.SpawnBotH\x00R\bspawnBot\x12C\n" +
	"\fadd_waypoint\x18\f \x01(\v2\x1e.lightspeedduel.ws.AddWaypointH\x00R\vaddWaypoint\x12L\n" +
	"\x0fupdate_waypoint\x18\r \x01(\v2!.lightspeedduel.ws.UpdateWaypointH\x00R\x0eupdateWaypoint\x12F\n" +
	"\rmove_waypoint\x18\x0e \x01(\v2\x1f.lightspeedduel.ws.MoveWaypointH\x00R\fmoveWaypoint\x12L\n" +
	"\x0fdelete_waypoint\x18\x0f \x01(\v2!.lightspeedduel.ws.DeleteWaypointH\x00R\x0edeleteWaypoint\x12L\n" +
	"\x0fclear_waypoints\x18\x10 \x01(\v2!.lightspeedduel.ws.ClearWaypointsH\x00R\x0eclearWaypoints\x12R\n" +
	"\x11configure_missile\x18\x11 \x01(\v2#.lightspeedduel.ws.ConfigureMissileH\x00R\x10configureMissile\x12Y\n" +
	"\x14add_missile_waypoint\x18\x12 \x01(\v2%.lightspeedduel.ws.AddMissileWaypointH\x00R\x12addMissileWaypoint\x12r\n" +
	"\x1dupdate_missile_waypoint_speed\x18\x13 \x01(\v2-.lightspeedduel.ws.UpdateMissileWaypointSpeedH\x00R\x1aupdateMissileWaypointSpeed\x12\\\n" +
	"\x15move_missile_waypoint\x18\x14 \x01(\v2&.lightspeedduel.ws.MoveMissileWaypointH\x00R\x13moveMissileWaypoint\x12b\n" +
	"\x17delete_missile_waypoint\x18\x15 \x01(\v2(.lightspeedduel.ws.DeleteMissileWaypointH\x00R\x15deleteMissileWaypoint\x12V\n" +
	"\x13clear_missile_route\x18\x16 \x01(\v2$.lightspeedduel.ws.ClearMissileRouteH\x00R\x11clearMissileRoute\x12P\n" +
	"\x11add_missile_route\x18\x17 \x01(\v2\".lightspeedduel.ws.AddMissileRouteH\x00R\x0faddMissileRoute\x12Y\n" +
	"\x14rename_missile_route\x18\x18 \x01(\v2%.lightspeedduel.ws.RenameMissileRouteH\x00R\x12renameMissileRoute\x12Y\n" +
	"\x14delete_missile_route\x18\x19 \x01(\v2%.lightspeedduel.ws.DeleteMissileRouteH\x00R\x12deleteMissileRoute\x12c\n" +
	"\x18set_active_missile_route\x18\x1a \x01(\v2(.lightspeedduel.ws.SetActiveMissileRouteH\x00R\x15setActiveMissileRoute\x12I\n" +
	"\x0elaunch_missile\x18\x1b \x01(\v2 .lightspeedduel.ws.LaunchMissileH\x00R\rlaunchMissile\x12:\n" +
	"\tdag_start\x18\x1e \x01(\v2\x1b.lightspeedduel.ws.DagStartH\x00R\bdagStart\x12=\n" +
	"\n" +
	"dag_cancel\x18\x1f \x01(\v2\x1c.lightspeedduel.ws.DagCancelH\x00R\tdagCancel\x12D\n" +
	"\rdag_story_ack\x18  \x01(\v2\x1e.lightspeedduel.ws.DagStoryAckH\x00R\vdagStoryAck\x127\n" +
	"\bdag_list\x18! \x01(\v2\x1a.lightspeedduel.ws.DagListH\x00R\adagList\x12S\n" +
	"\x12mission_spawn_wave\x18( \x01(\v2#.lightspeedduel.ws.MissionSpawnWaveH\x00R\x10missionSpawnWave\x12V\n" +
	"\x13mission_story_event\x18) \x01(\v2$.lightspeedduel.ws.MissionStoryEventH\x00R\x11missionStoryEvent\x12P\n" +
	"\x11dag_list_response\x182 \x01(\v2\".lightspeedduel.ws.DagListResponseH\x00R\x0fdagListResponseB\t\n" +
	"\apayload\"\xee\x05\n" +
	"\vStateUpdate\x12\x10\n" +
	"\x03now\x18\x01 \x01(\x01R\x03now\x12(\n" +
	"\x02me\x18\x02 \x01(\v2\x18.lightspeedduel.ws.GhostR\x02me\x120\n" +
	"\x06ghosts\x18\x03 \x03(\v2\x18.lightspeedduel.ws.GhostR\x06ghosts\x12/\n" +
	"\x04meta\x18\x04 \x01(\v2\x1b.lightspeedduel.ws.RoomMetaR\x04meta\x126\n" +
	"\bmissiles\x18\x05 \x03(\v2\x1a.lightspeedduel.ws.MissileR\bmissiles\x12G\n" +
	"\x0emissile_config\x18\x06 \x01(\v2 .lightspeedduel.ws.MissileConfigR\rmissileConfig\x12H\n" +
	"\x11missile_waypoints\x18\a \x03(\v2\x1b.lightspeedduel.ws.WaypointR\x10missileWaypoints\x12F\n" +
	"\x0emissile_routes\x18\b \x03(\v2\x1f.lightspeedduel.ws.MissileRouteR\rmissileRoutes\x120\n" +
	"\x14active_missile_route\x18\t \x01(\tR\x12activeMissileRoute\x12,\n" +
	"\x12next_missile_ready\x18\n" +
	" \x01(\x01R\x10nextMissileReady\x122\n" +
	"\x03dag\x18\v \x01(\v2\x1b.lightspeedduel.ws.DagStateH\x00R\x03dag\x88\x01\x01\x12?\n" +
	"\tinventory\x18\f \x01(\v2\x1c.lightspeedduel.ws.InventoryH\x01R\tinventory\x88\x01\x01\x128\n" +
	"\x05story\x18\r \x01(\v2\x1d.lightspeedduel.ws.StoryStateH\x02R\x05story\x88\x01\x01B\x06\n" +
	"\x04_dagB\f\n" +
	"\n" +
	"_inventoryB\b\n" +
	"\x06_story\")\n" +
	"\rRoomFullError\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\"^\n" +
	"\n" +
	"ClientJoin\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x12\n" +
	"\x04room\x18\x02 \x01(\tR\x04room\x12\x13\n" +
	"\x05map_w\x18\x03 \x01(\x01R\x04mapW\x12\x13\n" +
	"\x05map_h\x18\x04 \x01(\x01R\x04mapH\"\n" +
	"\n" +
	"\bSpawnBot\"?\n" +
	"\vAddWaypoint\x12\f\n" +
	"\x01x\x18\x01 \x01(\x01R\x01x\x12\f\n" +
	"\x01y\x18\x02 \x01(\x01R\x01y\x12\x14\n" +
	"\x05speed\x18\x03 \x01(\x01R\x05speed\"<\n" +
	"\x0eUpdateWaypoint\x12\x14\n" +
	"\x05index\x18\x01 \x01(\x05R\x05index\x12\x14\n" +
	"\x05speed\x18\x02 \x01(\x01R\x05speed\"@\n" +
	"\fMoveWaypoint\x12\x14\n" +
	"\x05index\x18\x01 \x01(\x05R\x05index\x12\f\n" +
	"\x01x\x18\x02 \x01(\x01R\x01x\x12\f\n" +
	"\x01y\x18\x03 \x01(\x01R\x01y\"&\n" +
	"\x0eDeleteWaypoint\x12\x14\n" +
	"\x05index\x18\x01 \x01(\x05R\x05index\"\x10\n" +
	"\x0eClearWaypoints\"Z\n" +
	"\x10ConfigureMissile\x12#\n" +
	"\rmissile_speed\x18\x01 \x01(\x01R\fmissileSpeed\x12!\n" +
	"\fmissile_agro\x18\x02 \x01(\x01R\vmissileAgro\"a\n" +
	"\x12AddMissileWaypoint\x12\x19\n" +
	"\broute_id\x18\x01 \x01(\tR\arouteId\x12\f\n" +
	"\x01x\x18\x02 \x01(\x01R\x01x\x12\f\n" +
	"\x01y\x18\x03 \x01(\x01R\x01y\x12\x14\n" +
	"\x05speed\x18\x04 \x01(\x01R\x05speed\"c\n" +
	"\x1aUpdateMissileWaypointSpeed\x12\x19\n" +
	"\broute_id\x18\x01 \x01(\tR\arouteId\x12\x14\n" +
	"\x05index\x18\x02 \x01(\x05R\x05index\x12\x14\n" +
	"\x05speed\x18\x03 \x01(\x01R\x05speed\"b\n" +
	"\x13MoveMissileWaypoint\x12\x19\n" +
	"\broute_id\x18\x01 \x01(\tR\arouteId\x12\x14\n" +
	"\x05index\x18\x02 \x01(\x05R\x05index\x12\f\n" +
	"\x01x\x18\x03 \x01(\x01R\x01x\x12\f\n" +
	"\x01y\x18\x04 \x01(\x01R\x01y\"H\n" +
	"\x15DeleteMissileWaypoint\x12\x19\n" +
	"\broute_id\x18\x01 \x01(\tR\arouteId\x12\x14\n" +
	"\x05index\x18\x02 \x01(\x05R\x05index\".\n" +
	"\x11ClearMissileRoute\x12\x19\n" +
	"\broute_id\x18\x01 \x01(\tR\arouteId\"%\n" +
	"\x0fAddMissileRoute\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\"C\n" +
	"\x12RenameMissileRoute\x12\x19\n" +
	"\broute_id\x18\x01 \x01(\tR\arouteId\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\"/\n" +
	"\x12DeleteMissileRoute\x12\x19\n" +
	"\broute_id\x18\x01 \x01(\tR\arouteId\"2\n" +
	"\x15SetActiveMissileRoute\x12\x19\n" +
	"\broute_id\x18\x01 \x01(\tR\arouteId\"*\n" +
	"\rLaunchMissile\x12\x19\n" +
	"\broute_id\x18\x01 \x01(\tR\arouteId\"\xcf\x02\n" +
	"\x05Ghost\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\f\n" +
	"\x01x\x18\x02 \x01(\x01R\x01x\x12\f\n" +
	"\x01y\x18\x03 \x01(\x01R\x01y\x12\x0e\n" +
	"\x02vx\x18\x04 \x01(\x01R\x02vx\x12\x0e\n" +
	"\x02vy\x18\x05 \x01(\x01R\x02vy\x12\f\n" +
	"\x01t\x18\x06 \x01(\x01R\x01t\x12\x12\n" +
	"\x04self\x18\a \x01(\bR\x04self\x129\n" +
	"\twaypoints\x18\b \x03(\v2\x1b.lightspeedduel.ws.WaypointR\twaypoints\x124\n" +
	"\x16current_waypoint_index\x18\t \x01(\x05R\x14currentWaypointIndex\x12\x0e\n" +
	"\x02hp\x18\n" +
	" \x01(\x05R\x02hp\x12\x14\n" +
	"\x05kills\x18\v \x01(\x05R\x05kills\x128\n" +
	"\x04heat\x18\f \x01(\v2\x1f.lightspeedduel.ws.ShipHeatViewH\x00R\x04heat\x88\x01\x01B\a\n" +
	"\x05_heat\"<\n" +
	"\bWaypoint\x12\f\n" +
	"\x01x\x18\x01 \x01(\x01R\x01x\x12\f\n" +
	"\x01y\x18\x02 \x01(\x01R\x01y\x12\x14\n" +
	"\x05speed\x18\x03 \x01(\x01R\x05speed\"4\n" +
	"\bRoomMeta\x12\f\n" +
	"\x01c\x18\x01 \x01(\x01R\x01c\x12\f\n" +
	"\x01w\x18\x02 \x01(\x01R\x01w\x12\f\n" +
	"\x01h\x18\x03 \x01(\x01R\x01h\"\xea\x02\n" +
	"\aMissile\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x14\n" +
	"\x05owner\x18\x02 \x01(\tR\x05owner\x12\x12\n" +
	"\x04self\x18\x03 \x01(\bR\x04self\x12\f\n" +
	"\x01x\x18\x04 \x01(\x01R\x01x\x12\f\n" +
	"\x01y\x18\x05 \x01(\x01R\x01y\x12\x0e\n" +
	"\x02vx\x18\x06 \x01(\x01R\x02vx\x12\x0e\n" +
	"\x02vy\x18\a \x01(\x01R\x02vy\x12\f\n" +
	"\x01t\x18\b \x01(\x01R\x01t\x12\x1f\n" +
	"\vagro_radius\x18\t \x01(\x01R\n" +
	"agroRadius\x12\x1a\n" +
	"\blifetime\x18\n" +
	" \x01(\x01R\blifetime\x12\x1f\n" +
	"\vlaunch_time\x18\v \x01(\x01R\n" +
	"launchTime\x12\x1d\n" +
	"\n" +
	"expires_at\x18\f \x01(\x01R\texpiresAt\x12\x1b\n" +
	"\ttarget_id\x18\r \x01(\tR\btargetId\x128\n" +
	"\x04heat\x18\x0e \x01(\v2\x1f.lightspeedduel.ws.ShipHeatViewH\x00R\x04heat\x88\x01\x01B\a\n" +
	"\x05_heat\"\x8c\x02\n" +
	"\rMissileConfig\x12\x14\n" +
	"\x05speed\x18\x01 \x01(\x01R\x05speed\x12\x1b\n" +
	"\tspeed_min\x18\x02 \x01(\x01R\bspeedMin\x12\x1b\n" +
	"\tspeed_max\x18\x03 \x01(\x01R\bspeedMax\x12\x19\n" +
	"\bagro_min\x18\x04 \x01(\x01R\aagroMin\x12\x1f\n" +
	"\vagro_radius\x18\x05 \x01(\x01R\n" +
	"agroRadius\x12\x1a\n" +
	"\blifetime\x18\x06 \x01(\x01R\blifetime\x12C\n" +
	"\vheat_config\x18\a \x01(\v2\x1d.lightspeedduel.ws.HeatParamsH\x00R\n" +
	"heatConfig\x88\x01\x01B\x0e\n" +
	"\f_heat_config\"m\n" +
	"\fMissileRoute\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x129\n" +
	"\twaypoints\x18\x03 \x03(\v2\x1b.lightspeedduel.ws.WaypointR\twaypoints\"\x96\x01\n" +
	"\fShipHeatView\x12\f\n" +
	"\x01v\x18\x01 \x01(\x01R\x01v\x12\f\n" +
	"\x01m\x18\x02 \x01(\x01R\x01m\x12\f\n" +
	"\x01w\x18\x03 \x01(\x01R\x01w\x12\f\n" +
	"\x01o\x18\x04 \x01(\x01R\x01o\x12\x0e\n" +
	"\x02ms\x18\x05 \x01(\x01R\x02ms\x12\x0e\n" +
	"\x02su\x18\x06 \x01(\x01R\x02su\x12\x0e\n" +
	"\x02ku\x18\a \x01(\x01R\x02ku\x12\x0e\n" +
	"\x02kd\x18\b \x01(\x01R\x02kd\x12\x0e\n" +
	"\x02ex\x18\t \x01(\x01R\x02ex\"\xb7\x01\n" +
	"\n" +
	"HeatParams\x12\x10\n" +
	"\x03max\x18\x01 \x01(\x01R\x03max\x12\x17\n" +
	"\awarn_at\x18\x02 \x01(\x01R\x06warnAt\x12\x1f\n" +
	"\voverheat_at\x18\x03 \x01(\x01R\n" +
	"overheatAt\x12!\n" +
	"\fmarker_speed\x18\x04 \x01(\x01R\vmarkerSpeed\x12\x11\n" +
	"\x04k_up\x18\x05 \x01(\x01R\x03kUp\x12\x15\n" +
	"\x06k_down\x18\x06 \x01(\x01R\x05kDown\x12\x10\n" +
	"\x03exp\x18\a \x01(\x01R\x03exp\"\xfd\x01\n" +
	"\aDagNode\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x122\n" +
	"\x04kind\x18\x02 \x01(\x0e2\x1e.lightspeedduel.ws.DagNodeKindR\x04kind\x12\x14\n" +
	"\x05label\x18\x03 \x01(\tR\x05label\x128\n" +
	"\x06status\x18\x04 \x01(\x0e2 .lightspeedduel.ws.DagNodeStatusR\x06status\x12\x1f\n" +
	"\vremaining_s\x18\x05 \x01(\x01R\n" +
	"remainingS\x12\x1d\n" +
	"\n" +
	"duration_s\x18\x06 \x01(\x01R\tdurationS\x12\x1e\n" +
	"\n" +
	"repeatable\x18\a \x01(\bR\n" +
	"repeatable\"<\n" +
	"\bDagState\x120\n" +
	"\x05nodes\x18\x01 \x03(\v2\x1a.lightspeedduel.ws.DagNodeR\x05nodes\"#\n" +
	"\bDagStart\x12\x17\n" +
	"\anode_id\x18\x01 \x01(\tR\x06nodeId\"$\n" +
	"\tDagCancel\x12\x17\n" +
	"\anode_id\x18\x01 \x01(\tR\x06nodeId\"C\n" +
	"\vDagStoryAck\x12\x17\n" +
	"\anode_id\x18\x01 \x01(\tR\x06nodeId\x12\x1b\n" +
	"\tchoice_id\x18\x02 \x01(\tR\bchoiceId\"\t\n" +
	"\aDagList\"@\n" +
	"\x0fDagListResponse\x12-\n" +
	"\x03dag\x18\x01 \x01(\v2\x1b.lightspeedduel.ws.DagStateR\x03dag\"\x83\x01\n" +
	"\rInventoryItem\x12\x12\n" +
	"\x04type\x18\x01 \x01(\tR\x04type\x12\x1d\n" +
	"\n" +
	"variant_id\x18\x02 \x01(\tR\tvariantId\x12#\n" +
	"\rheat_capacity\x18\x03 \x01(\x01R\fheatCapacity\x12\x1a\n" +
	"\bquantity\x18\x04 \x01(\x05R\bquantity\"C\n" +
	"\tInventory\x126\n" +
	"\x05items\x18\x01 \x03(\v2 .lightspeedduel.ws.InventoryItemR\x05items\"9\n" +
	"\x13StoryDialogueChoice\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04text\x18\x02 \x01(\tR\x04text\"<\n" +
	"\x10StoryTutorialTip\x12\x14\n" +
	"\x05title\x18\x01 \x01(\tR\x05title\x12\x12\n" +
	"\x04text\x18\x02 \x01(\tR\x04text\"\xbc\x02\n" +
	"\rStoryDialogue\x12\x18\n" +
	"\aspeaker\x18\x01 \x01(\tR\aspeaker\x12\x12\n" +
	"\x04text\x18\x02 \x01(\tR\x04text\x126\n" +
	"\x06intent\x18\x03 \x01(\x0e2\x1e.lightspeedduel.ws.StoryIntentR\x06intent\x12%\n" +
	"\x0econtinue_label\x18\x04 \x01(\tR\rcontinueLabel\x12@\n" +
	"\achoices\x18\x05 \x03(\v2&.lightspeedduel.ws.StoryDialogueChoiceR\achoices\x12K\n" +
	"\ftutorial_tip\x18\x06 \x01(\v2#.lightspeedduel.ws.StoryTutorialTipH\x00R\vtutorialTip\x88\x01\x01B\x0f\n" +
	"\r_tutorial_tip\"b\n" +
	"\n" +
	"StoryEvent\x12\x1d\n" +
	"\n" +
	"chapter_id\x18\x01 \x01(\tR\tchapterId\x12\x17\n" +
	"\anode_id\x18\x02 \x01(\tR\x06nodeId\x12\x1c\n" +
	"\ttimestamp\x18\x03 \x01(\x01R\ttimestamp\"\xd9\x02\n" +
	"\n" +
	"StoryState\x12\x1f\n" +
	"\vactive_node\x18\x01 \x01(\tR\n" +
	"activeNode\x12A\n" +
	"\bdialogue\x18\x02 \x01(\v2 .lightspeedduel.ws.StoryDialogueH\x00R\bdialogue\x88\x01\x01\x12\x1c\n" +
	"\tavailable\x18\x03 \x03(\tR\tavailable\x12>\n" +
	"\x05flags\x18\x04 \x03(\v2(.lightspeedduel.ws.StoryState.FlagsEntryR\x05flags\x12B\n" +
	"\rrecent_events\x18\x05 \x03(\v2\x1d.lightspeedduel.ws.StoryEventR\frecentEvents\x1a8\n" +
	"\n" +
	"FlagsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\bR\x05value:\x028\x01B\v\n" +
	"\t_dialogue\"1\n" +
	"\x10MissionSpawnWave\x12\x1d\n" +
	"\n" +
	"wave_index\x18\x01 \x01(\x05R\twaveIndex\"A\n" +
	"\x11MissionStoryEvent\x12\x14\n" +
	"\x05event\x18\x01 \x01(\tR\x05event\x12\x16\n" +
	"\x06beacon\x18\x02 \x01(\x05R\x06beacon*\xab\x01\n" +
	"\rDagNodeStatus\x12\x1f\n" +
	"\x1bDAG_NODE_STATUS_UNSPECIFIED\x10\x00\x12\x1a\n" +
	"\x16DAG_NODE_STATUS_LOCKED\x10\x01\x12\x1d\n" +
	"\x19DAG_NODE_STATUS_AVAILABLE\x10\x02\x12\x1f\n" +
	"\x1bDAG_NODE_STATUS_IN_PROGRESS\x10\x03\x12\x1d\n" +
	"\x19DAG_NODE_STATUS_COMPLETED\x10\x04*\x91\x01\n" +
	"\vDagNodeKind\x12\x1d\n" +
	"\x19DAG_NODE_KIND_UNSPECIFIED\x10\x00\x12\x19\n" +
	"\x15DAG_NODE_KIND_FACTORY\x10\x01\x12\x16\n" +
	"\x12DAG_NODE_KIND_UNIT\x10\x02\x12\x17\n" +
	"\x13DAG_NODE_KIND_STORY\x10\x03\x12\x17\n" +
	"\x13DAG_NODE_KIND_CRAFT\x10\x04*\\\n" +
	"\vStoryIntent\x12\x1c\n" +
	"\x18STORY_INTENT_UNSPECIFIED\x10\x00\x12\x18\n" +
	"\x14STORY_INTENT_FACTORY\x10\x01\x12\x15\n" +
	"\x11STORY_INTENT_UNIT\x10\x02B\"Z LightSpeedDuel/internal/proto/wsb\x06proto3"

var (
	file_proto_ws_messages_proto_rawDescOnce sync.Once
	file_proto_ws_messages_proto_rawDescData []byte
)

func file_proto_ws_messages_proto_rawDescGZIP() []byte {
	file_proto_ws_messages_proto_rawDescOnce.Do(func() {
		file_proto_ws_messages_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_ws_messages_proto_rawDesc), len(file_proto_ws_messages_proto_rawDesc)))
	})
	return file_proto_ws_messages_proto_rawDescData
}

var file_proto_ws_messages_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_proto_ws_messages_proto_msgTypes = make([]protoimpl.MessageInfo, 46)
var file_proto_ws_messages_proto_goTypes = []any{
	(DagNodeStatus)(0),                 // 0: lightspeedduel.ws.DagNodeStatus
	(DagNodeKind)(0),                   // 1: lightspeedduel.ws.DagNodeKind
	(StoryIntent)(0),                   // 2: lightspeedduel.ws.StoryIntent
	(*WsEnvelope)(nil),                 // 3: lightspeedduel.ws.WsEnvelope
	(*StateUpdate)(nil),                // 4: lightspeedduel.ws.StateUpdate
	(*RoomFullError)(nil),              // 5: lightspeedduel.ws.RoomFullError
	(*ClientJoin)(nil),                 // 6: lightspeedduel.ws.ClientJoin
	(*SpawnBot)(nil),                   // 7: lightspeedduel.ws.SpawnBot
	(*AddWaypoint)(nil),                // 8: lightspeedduel.ws.AddWaypoint
	(*UpdateWaypoint)(nil),             // 9: lightspeedduel.ws.UpdateWaypoint
	(*MoveWaypoint)(nil),               // 10: lightspeedduel.ws.MoveWaypoint
	(*DeleteWaypoint)(nil),             // 11: lightspeedduel.ws.DeleteWaypoint
	(*ClearWaypoints)(nil),             // 12: lightspeedduel.ws.ClearWaypoints
	(*ConfigureMissile)(nil),           // 13: lightspeedduel.ws.ConfigureMissile
	(*AddMissileWaypoint)(nil),         // 14: lightspeedduel.ws.AddMissileWaypoint
	(*UpdateMissileWaypointSpeed)(nil), // 15: lightspeedduel.ws.UpdateMissileWaypointSpeed
	(*MoveMissileWaypoint)(nil),        // 16: lightspeedduel.ws.MoveMissileWaypoint
	(*DeleteMissileWaypoint)(nil),      // 17: lightspeedduel.ws.DeleteMissileWaypoint
	(*ClearMissileRoute)(nil),          // 18: lightspeedduel.ws.ClearMissileRoute
	(*AddMissileRoute)(nil),            // 19: lightspeedduel.ws.AddMissileRoute
	(*RenameMissileRoute)(nil),         // 20: lightspeedduel.ws.RenameMissileRoute
	(*DeleteMissileRoute)(nil),         // 21: lightspeedduel.ws.DeleteMissileRoute
	(*SetActiveMissileRoute)(nil),      // 22: lightspeedduel.ws.SetActiveMissileRoute
	(*LaunchMissile)(nil),              // 23: lightspeedduel.ws.LaunchMissile
	(*Ghost)(nil),                      // 24: lightspeedduel.ws.Ghost
	(*Waypoint)(nil),                   // 25: lightspeedduel.ws.Waypoint
	(*RoomMeta)(nil),                   // 26: lightspeedduel.ws.RoomMeta
	(*Missile)(nil),                    // 27: lightspeedduel.ws.Missile
	(*MissileConfig)(nil),              // 28: lightspeedduel.ws.MissileConfig
	(*MissileRoute)(nil),               // 29: lightspeedduel.ws.MissileRoute
	(*ShipHeatView)(nil),               // 30: lightspeedduel.ws.ShipHeatView
	(*HeatParams)(nil),                 // 31: lightspeedduel.ws.HeatParams
	(*DagNode)(nil),                    // 32: lightspeedduel.ws.DagNode
	(*DagState)(nil),                   // 33: lightspeedduel.ws.DagState
	(*DagStart)(nil),                   // 34: lightspeedduel.ws.DagStart
	(*DagCancel)(nil),                  // 35: lightspeedduel.ws.DagCancel
	(*DagStoryAck)(nil),                // 36: lightspeedduel.ws.DagStoryAck
	(*DagList)(nil),                    // 37: lightspeedduel.ws.DagList
	(*DagListResponse)(nil),            // 38: lightspeedduel.ws.DagListResponse
	(*InventoryItem)(nil),              // 39: lightspeedduel.ws.InventoryItem
	(*Inventory)(nil),                  // 40: lightspeedduel.ws.Inventory
	(*StoryDialogueChoice)(nil),        // 41: lightspeedduel.ws.StoryDialogueChoice
	(*StoryTutorialTip)(nil),           // 42: lightspeedduel.ws.StoryTutorialTip
	(*StoryDialogue)(nil),              // 43: lightspeedduel.ws.StoryDialogue
	(*StoryEvent)(nil),                 // 44: lightspeedduel.ws.StoryEvent
	(*StoryState)(nil),                 // 45: lightspeedduel.ws.StoryState
	(*MissionSpawnWave)(nil),           // 46: lightspeedduel.ws.MissionSpawnWave
	(*MissionStoryEvent)(nil),          // 47: lightspeedduel.ws.MissionStoryEvent
	nil,                                // 48: lightspeedduel.ws.StoryState.FlagsEntry
}
var file_proto_ws_messages_proto_depIdxs = []int32{
	4,  // 0: lightspeedduel.ws.WsEnvelope.state_update:type_name -> lightspeedduel.ws.StateUpdate
	5,  // 1: lightspeedduel.ws.WsEnvelope.room_full:type_name -> lightspeedduel.ws.RoomFullError
	6,  // 2: lightspeedduel.ws.WsEnvelope.join:type_name -> lightspeedduel.ws.ClientJoin
	7,  // 3: lightspeedduel.ws.WsEnvelope.spawn_bot:type_name -> lightspeedduel.ws.SpawnBot
	8,  // 4: lightspeedduel.ws.WsEnvelope.add_waypoint:type_name -> lightspeedduel.ws.AddWaypoint
	9,  // 5: lightspeedduel.ws.WsEnvelope.update_waypoint:type_name -> lightspeedduel.ws.UpdateWaypoint
	10, // 6: lightspeedduel.ws.WsEnvelope.move_waypoint:type_name -> lightspeedduel.ws.MoveWaypoint
	11, // 7: lightspeedduel.ws.WsEnvelope.delete_waypoint:type_name -> lightspeedduel.ws.DeleteWaypoint
	12, // 8: lightspeedduel.ws.WsEnvelope.clear_waypoints:type_name -> lightspeedduel.ws.ClearWaypoints
	13, // 9: lightspeedduel.ws.WsEnvelope.configure_missile:type_name -> lightspeedduel.ws.ConfigureMissile
	14, // 10: lightspeedduel.ws.WsEnvelope.add_missile_waypoint:type_name -> lightspeedduel.ws.AddMissileWaypoint
	15, // 11: lightspeedduel.ws.WsEnvelope.update_missile_waypoint_speed:type_name -> lightspeedduel.ws.UpdateMissileWaypointSpeed
	16, // 12: lightspeedduel.ws.WsEnvelope.move_missile_waypoint:type_name -> lightspeedduel.ws.MoveMissileWaypoint
	17, // 13: lightspeedduel.ws.WsEnvelope.delete_missile_waypoint:type_name -> lightspeedduel.ws.DeleteMissileWaypoint
	18, // 14: lightspeedduel.ws.WsEnvelope.clear_missile_route:type_name -> lightspeedduel.ws.ClearMissileRoute
	19, // 15: lightspeedduel.ws.WsEnvelope.add_missile_route:type_name -> lightspeedduel.ws.AddMissileRoute
	20, // 16: lightspeedduel.ws.WsEnvelope.rename_missile_route:type_name -> lightspeedduel.ws.RenameMissileRoute
	21, // 17: lightspeedduel.ws.WsEnvelope.delete_missile_route:type_name -> lightspeedduel.ws.DeleteMissileRoute
	22, // 18: lightspeedduel.ws.WsEnvelope.set_active_missile_route:type_name -> lightspeedduel.ws.SetActiveMissileRoute
	23, // 19: lightspeedduel.ws.WsEnvelope.launch_missile:type_name -> lightspeedduel.ws.LaunchMissile
	34, // 20: lightspeedduel.ws.WsEnvelope.dag_start:type_name -> lightspeedduel.ws.DagStart
	35, // 21: lightspeedduel.ws.WsEnvelope.dag_cancel:type_name -> lightspeedduel.ws.DagCancel
	36, // 22: lightspeedduel.ws.WsEnvelope.dag_story_ack:type_name -> lightspeedduel.ws.DagStoryAck
	37, // 23: lightspeedduel.ws.WsEnvelope.dag_list:type_name -> lightspeedduel.ws.DagList
	46, // 24: lightspeedduel.ws.WsEnvelope.mission_spawn_wave:type_name -> lightspeedduel.ws.MissionSpawnWave
	47, // 25: lightspeedduel.ws.WsEnvelope.mission_story_event:type_name -> lightspeedduel.ws.MissionStoryEvent
	38, // 26: lightspeedduel.ws.WsEnvelope.dag_list_response:type_name -> lightspeedduel.ws.DagListResponse
	24, // 27: lightspeedduel.ws.StateUpdate.me:type_name -> lightspeedduel.ws.Ghost
	24, // 28: lightspeedduel.ws.StateUpdate.ghosts:type_name -> lightspeedduel.ws.Ghost
	26, // 29: lightspeedduel.ws.StateUpdate.meta:type_name -> lightspeedduel.ws.RoomMeta
	27, // 30: lightspeedduel.ws.StateUpdate.missiles:type_name -> lightspeedduel.ws.Missile
	28, // 31: lightspeedduel.ws.StateUpdate.missile_config:type_name -> lightspeedduel.ws.MissileConfig
	25, // 32: lightspeedduel.ws.StateUpdate.missile_waypoints:type_name -> lightspeedduel.ws.Waypoint
	29, // 33: lightspeedduel.ws.StateUpdate.missile_routes:type_name -> lightspeedduel.ws.MissileRoute
	33, // 34: lightspeedduel.ws.StateUpdate.dag:type_name -> lightspeedduel.ws.DagState
	40, // 35: lightspeedduel.ws.StateUpdate.inventory:type_name -> lightspeedduel.ws.Inventory
	45, // 36: lightspeedduel.ws.StateUpdate.story:type_name -> lightspeedduel.ws.StoryState
	25, // 37: lightspeedduel.ws.Ghost.waypoints:type_name -> lightspeedduel.ws.Waypoint
	30, // 38: lightspeedduel.ws.Ghost.heat:type_name -> lightspeedduel.ws.ShipHeatView
	30, // 39: lightspeedduel.ws.Missile.heat:type_name -> lightspeedduel.ws.ShipHeatView
	31, // 40: lightspeedduel.ws.MissileConfig.heat_config:type_name -> lightspeedduel.ws.HeatParams
	25, // 41: lightspeedduel.ws.MissileRoute.waypoints:type_name -> lightspeedduel.ws.Waypoint
	1,  // 42: lightspeedduel.ws.DagNode.kind:type_name -> lightspeedduel.ws.DagNodeKind
	0,  // 43: lightspeedduel.ws.DagNode.status:type_name -> lightspeedduel.ws.DagNodeStatus
	32, // 44: lightspeedduel.ws.DagState.nodes:type_name -> lightspeedduel.ws.DagNode
	33, // 45: lightspeedduel.ws.DagListResponse.dag:type_name -> lightspeedduel.ws.DagState
	39, // 46: lightspeedduel.ws.Inventory.items:type_name -> lightspeedduel.ws.InventoryItem
	2,  // 47: lightspeedduel.ws.StoryDialogue.intent:type_name -> lightspeedduel.ws.StoryIntent
	41, // 48: lightspeedduel.ws.StoryDialogue.choices:type_name -> lightspeedduel.ws.StoryDialogueChoice
	42, // 49: lightspeedduel.ws.StoryDialogue.tutorial_tip:type_name -> lightspeedduel.ws.StoryTutorialTip
	43, // 50: lightspeedduel.ws.StoryState.dialogue:type_name -> lightspeedduel.ws.StoryDialogue
	48, // 51: lightspeedduel.ws.StoryState.flags:type_name -> lightspeedduel.ws.StoryState.FlagsEntry
	44, // 52: lightspeedduel.ws.StoryState.recent_events:type_name -> lightspeedduel.ws.StoryEvent
	53, // [53:53] is the sub-list for method output_type
	53, // [53:53] is the sub-list for method input_type
	53, // [53:53] is the sub-list for extension type_name
	53, // [53:53] is the sub-list for extension extendee
	0,  // [0:53] is the sub-list for field type_name
}

func init() { file_proto_ws_messages_proto_init() }
func file_proto_ws_messages_proto_init() {
	if File_proto_ws_messages_proto != nil {
		return
	}
	file_proto_ws_messages_proto_msgTypes[0].OneofWrappers = []any{
		(*WsEnvelope_StateUpdate)(nil),
		(*WsEnvelope_RoomFull)(nil),
		(*WsEnvelope_Join)(nil),
		(*WsEnvelope_SpawnBot)(nil),
		(*WsEnvelope_AddWaypoint)(nil),
		(*WsEnvelope_UpdateWaypoint)(nil),
		(*WsEnvelope_MoveWaypoint)(nil),
		(*WsEnvelope_DeleteWaypoint)(nil),
		(*WsEnvelope_ClearWaypoints)(nil),
		(*WsEnvelope_ConfigureMissile)(nil),
		(*WsEnvelope_AddMissileWaypoint)(nil),
		(*WsEnvelope_UpdateMissileWaypointSpeed)(nil),
		(*WsEnvelope_MoveMissileWaypoint)(nil),
		(*WsEnvelope_DeleteMissileWaypoint)(nil),
		(*WsEnvelope_ClearMissileRoute)(nil),
		(*WsEnvelope_AddMissileRoute)(nil),
		(*WsEnvelope_RenameMissileRoute)(nil),
		(*WsEnvelope_DeleteMissileRoute)(nil),
		(*WsEnvelope_SetActiveMissileRoute)(nil),
		(*WsEnvelope_LaunchMissile)(nil),
		(*WsEnvelope_DagStart)(nil),
		(*WsEnvelope_DagCancel)(nil),
		(*WsEnvelope_DagStoryAck)(nil),
		(*WsEnvelope_DagList)(nil),
		(*WsEnvelope_MissionSpawnWave)(nil),
		(*WsEnvelope_MissionStoryEvent)(nil),
		(*WsEnvelope_DagListResponse)(nil),
	}
	file_proto_ws_messages_proto_msgTypes[1].OneofWrappers = []any{}
	file_proto_ws_messages_proto_msgTypes[21].OneofWrappers = []any{}
	file_proto_ws_messages_proto_msgTypes[24].OneofWrappers = []any{}
	file_proto_ws_messages_proto_msgTypes[25].OneofWrappers = []any{}
	file_proto_ws_messages_proto_msgTypes[40].OneofWrappers = []any{}
	file_proto_ws_messages_proto_msgTypes[42].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_ws_messages_proto_rawDesc), len(file_proto_ws_messages_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   46,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_ws_messages_proto_goTypes,
		DependencyIndexes: file_proto_ws_messages_proto_depIdxs,
		EnumInfos:         file_proto_ws_messages_proto_enumTypes,
		MessageInfos:      file_proto_ws_messages_proto_msgTypes,
	}.Build()
	File_proto_ws_messages_proto = out.File
	file_proto_ws_messages_proto_goTypes = nil
	file_proto_ws_messages_proto_depIdxs = nil
}
