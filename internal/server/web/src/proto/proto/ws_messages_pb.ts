// @generated by protoc-gen-es v2.9.0 with parameter "target=ts"
// @generated from file proto/ws_messages.proto (package lightspeedduel.ws, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv2";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv2";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file proto/ws_messages.proto.
 */
export const file_proto_ws_messages: GenFile = /*@__PURE__*/
  fileDesc("");

/**
 * WsEnvelope wraps all WebSocket messages in a discriminated union
 *
 * @generated from message lightspeedduel.ws.WsEnvelope
 */
export type WsEnvelope = Message<"lightspeedduel.ws.WsEnvelope"> & {
  /**
   * @generated from oneof lightspeedduel.ws.WsEnvelope.payload
   */
  payload: {
    /**
     * Server → Client
     *
     * @generated from field: lightspeedduel.ws.StateUpdate state_update = 1;
     */
    value: StateUpdate;
    case: "stateUpdate";
  } | {
    /**
     * @generated from field: lightspeedduel.ws.RoomFullError room_full = 2;
     */
    value: RoomFullError;
    case: "roomFull";
  } | {
    /**
     * Client → Server
     *
     * @generated from field: lightspeedduel.ws.ClientJoin join = 10;
     */
    value: ClientJoin;
    case: "join";
  } | {
    /**
     * @generated from field: lightspeedduel.ws.SpawnBot spawn_bot = 11;
     */
    value: SpawnBot;
    case: "spawnBot";
  } | {
    /**
     * @generated from field: lightspeedduel.ws.AddWaypoint add_waypoint = 12;
     */
    value: AddWaypoint;
    case: "addWaypoint";
  } | {
    /**
     * @generated from field: lightspeedduel.ws.UpdateWaypoint update_waypoint = 13;
     */
    value: UpdateWaypoint;
    case: "updateWaypoint";
  } | {
    /**
     * @generated from field: lightspeedduel.ws.MoveWaypoint move_waypoint = 14;
     */
    value: MoveWaypoint;
    case: "moveWaypoint";
  } | {
    /**
     * @generated from field: lightspeedduel.ws.DeleteWaypoint delete_waypoint = 15;
     */
    value: DeleteWaypoint;
    case: "deleteWaypoint";
  } | {
    /**
     * @generated from field: lightspeedduel.ws.ClearWaypoints clear_waypoints = 16;
     */
    value: ClearWaypoints;
    case: "clearWaypoints";
  } | {
    /**
     * @generated from field: lightspeedduel.ws.ConfigureMissile configure_missile = 17;
     */
    value: ConfigureMissile;
    case: "configureMissile";
  } | {
    /**
     * @generated from field: lightspeedduel.ws.AddMissileWaypoint add_missile_waypoint = 18;
     */
    value: AddMissileWaypoint;
    case: "addMissileWaypoint";
  } | {
    /**
     * @generated from field: lightspeedduel.ws.UpdateMissileWaypointSpeed update_missile_waypoint_speed = 19;
     */
    value: UpdateMissileWaypointSpeed;
    case: "updateMissileWaypointSpeed";
  } | {
    /**
     * @generated from field: lightspeedduel.ws.MoveMissileWaypoint move_missile_waypoint = 20;
     */
    value: MoveMissileWaypoint;
    case: "moveMissileWaypoint";
  } | {
    /**
     * @generated from field: lightspeedduel.ws.DeleteMissileWaypoint delete_missile_waypoint = 21;
     */
    value: DeleteMissileWaypoint;
    case: "deleteMissileWaypoint";
  } | {
    /**
     * @generated from field: lightspeedduel.ws.ClearMissileRoute clear_missile_route = 22;
     */
    value: ClearMissileRoute;
    case: "clearMissileRoute";
  } | {
    /**
     * @generated from field: lightspeedduel.ws.AddMissileRoute add_missile_route = 23;
     */
    value: AddMissileRoute;
    case: "addMissileRoute";
  } | {
    /**
     * @generated from field: lightspeedduel.ws.RenameMissileRoute rename_missile_route = 24;
     */
    value: RenameMissileRoute;
    case: "renameMissileRoute";
  } | {
    /**
     * @generated from field: lightspeedduel.ws.DeleteMissileRoute delete_missile_route = 25;
     */
    value: DeleteMissileRoute;
    case: "deleteMissileRoute";
  } | {
    /**
     * @generated from field: lightspeedduel.ws.SetActiveMissileRoute set_active_missile_route = 26;
     */
    value: SetActiveMissileRoute;
    case: "setActiveMissileRoute";
  } | {
    /**
     * @generated from field: lightspeedduel.ws.LaunchMissile launch_missile = 27;
     */
    value: LaunchMissile;
    case: "launchMissile";
  } | {
    /**
     * Phase 2: DAG commands
     *
     * @generated from field: lightspeedduel.ws.DagStart dag_start = 30;
     */
    value: DagStart;
    case: "dagStart";
  } | {
    /**
     * @generated from field: lightspeedduel.ws.DagCancel dag_cancel = 31;
     */
    value: DagCancel;
    case: "dagCancel";
  } | {
    /**
     * @generated from field: lightspeedduel.ws.DagStoryAck dag_story_ack = 32;
     */
    value: DagStoryAck;
    case: "dagStoryAck";
  } | {
    /**
     * @generated from field: lightspeedduel.ws.DagList dag_list = 33;
     */
    value: DagList;
    case: "dagList";
  } | {
    /**
     * Phase 2: Mission commands
     *
     * @generated from field: lightspeedduel.ws.MissionSpawnWave mission_spawn_wave = 40;
     */
    value: MissionSpawnWave;
    case: "missionSpawnWave";
  } | {
    /**
     * @generated from field: lightspeedduel.ws.MissionStoryEvent mission_story_event = 41;
     */
    value: MissionStoryEvent;
    case: "missionStoryEvent";
  } | {
    /**
     * Phase 2: Server responses
     *
     * @generated from field: lightspeedduel.ws.DagListResponse dag_list_response = 50;
     */
    value: DagListResponse;
    case: "dagListResponse";
  } | {
    /**
     * @generated from field: lightspeedduel.ws.MissionBeaconSnapshot mission_beacon_snapshot = 60;
     */
    value: MissionBeaconSnapshot;
    case: "missionBeaconSnapshot";
  } | {
    /**
     * @generated from field: lightspeedduel.ws.MissionBeaconDelta mission_beacon_delta = 61;
     */
    value: MissionBeaconDelta;
    case: "missionBeaconDelta";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message lightspeedduel.ws.WsEnvelope.
 * Use `create(WsEnvelopeSchema)` to create a new message.
 */
export const WsEnvelopeSchema: GenMessage<WsEnvelope> = /*@__PURE__*/
  messageDesc(file_proto_ws_messages, 0);

/**
 * Server → Client: Full game state
 * Sent every tick (~20Hz) containing the player's view of the game world
 * with light-delayed positions of other ships and missiles
 *
 * @generated from message lightspeedduel.ws.StateUpdate
 */
export type StateUpdate = Message<"lightspeedduel.ws.StateUpdate"> & {
  /**
   * @generated from field: double now = 1;
   */
  now: number;

  /**
   * @generated from field: lightspeedduel.ws.Ghost me = 2;
   */
  me?: Ghost;

  /**
   * @generated from field: repeated lightspeedduel.ws.Ghost ghosts = 3;
   */
  ghosts: Ghost[];

  /**
   * @generated from field: lightspeedduel.ws.RoomMeta meta = 4;
   */
  meta?: RoomMeta;

  /**
   * @generated from field: repeated lightspeedduel.ws.Missile missiles = 5;
   */
  missiles: Missile[];

  /**
   * @generated from field: lightspeedduel.ws.MissileConfig missile_config = 6;
   */
  missileConfig?: MissileConfig;

  /**
   * @generated from field: repeated lightspeedduel.ws.Waypoint missile_waypoints = 7;
   */
  missileWaypoints: Waypoint[];

  /**
   * @generated from field: repeated lightspeedduel.ws.MissileRoute missile_routes = 8;
   */
  missileRoutes: MissileRoute[];

  /**
   * @generated from field: string active_missile_route = 9;
   */
  activeMissileRoute: string;

  /**
   * @generated from field: double next_missile_ready = 10;
   */
  nextMissileReady: number;

  /**
   * Phase 2 additions:
   *
   * @generated from field: optional lightspeedduel.ws.DagState dag = 11;
   */
  dag?: DagState;

  /**
   * @generated from field: optional lightspeedduel.ws.Inventory inventory = 12;
   */
  inventory?: Inventory;

  /**
   * @generated from field: optional lightspeedduel.ws.StoryState story = 13;
   */
  story?: StoryState;

  /**
   * @generated from field: optional lightspeedduel.ws.PlayerCapabilities capabilities = 14;
   */
  capabilities?: PlayerCapabilities;
};

/**
 * Describes the message lightspeedduel.ws.StateUpdate.
 * Use `create(StateUpdateSchema)` to create a new message.
 */
export const StateUpdateSchema: GenMessage<StateUpdate> = /*@__PURE__*/
  messageDesc(file_proto_ws_messages, 1);

/**
 * Server → Client: Room full error
 *
 * @generated from message lightspeedduel.ws.RoomFullError
 */
export type RoomFullError = Message<"lightspeedduel.ws.RoomFullError"> & {
  /**
   * @generated from field: string message = 1;
   */
  message: string;
};

/**
 * Describes the message lightspeedduel.ws.RoomFullError.
 * Use `create(RoomFullErrorSchema)` to create a new message.
 */
export const RoomFullErrorSchema: GenMessage<RoomFullError> = /*@__PURE__*/
  messageDesc(file_proto_ws_messages, 2);

/**
 * Client → Server: Join game
 *
 * @generated from message lightspeedduel.ws.ClientJoin
 */
export type ClientJoin = Message<"lightspeedduel.ws.ClientJoin"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: string room = 2;
   */
  room: string;

  /**
   * @generated from field: double map_w = 3;
   */
  mapW: number;

  /**
   * @generated from field: double map_h = 4;
   */
  mapH: number;
};

/**
 * Describes the message lightspeedduel.ws.ClientJoin.
 * Use `create(ClientJoinSchema)` to create a new message.
 */
export const ClientJoinSchema: GenMessage<ClientJoin> = /*@__PURE__*/
  messageDesc(file_proto_ws_messages, 3);

/**
 * Client → Server: Spawn AI bot
 *
 * @generated from message lightspeedduel.ws.SpawnBot
 */
export type SpawnBot = Message<"lightspeedduel.ws.SpawnBot"> & {
};

/**
 * Describes the message lightspeedduel.ws.SpawnBot.
 * Use `create(SpawnBotSchema)` to create a new message.
 */
export const SpawnBotSchema: GenMessage<SpawnBot> = /*@__PURE__*/
  messageDesc(file_proto_ws_messages, 4);

/**
 * Client → Server: Add waypoint to ship route
 *
 * @generated from message lightspeedduel.ws.AddWaypoint
 */
export type AddWaypoint = Message<"lightspeedduel.ws.AddWaypoint"> & {
  /**
   * @generated from field: double x = 1;
   */
  x: number;

  /**
   * @generated from field: double y = 2;
   */
  y: number;

  /**
   * @generated from field: double speed = 3;
   */
  speed: number;
};

/**
 * Describes the message lightspeedduel.ws.AddWaypoint.
 * Use `create(AddWaypointSchema)` to create a new message.
 */
export const AddWaypointSchema: GenMessage<AddWaypoint> = /*@__PURE__*/
  messageDesc(file_proto_ws_messages, 5);

/**
 * Client → Server: Update waypoint speed
 *
 * @generated from message lightspeedduel.ws.UpdateWaypoint
 */
export type UpdateWaypoint = Message<"lightspeedduel.ws.UpdateWaypoint"> & {
  /**
   * @generated from field: int32 index = 1;
   */
  index: number;

  /**
   * @generated from field: double speed = 2;
   */
  speed: number;
};

/**
 * Describes the message lightspeedduel.ws.UpdateWaypoint.
 * Use `create(UpdateWaypointSchema)` to create a new message.
 */
export const UpdateWaypointSchema: GenMessage<UpdateWaypoint> = /*@__PURE__*/
  messageDesc(file_proto_ws_messages, 6);

/**
 * Client → Server: Move waypoint position
 *
 * @generated from message lightspeedduel.ws.MoveWaypoint
 */
export type MoveWaypoint = Message<"lightspeedduel.ws.MoveWaypoint"> & {
  /**
   * @generated from field: int32 index = 1;
   */
  index: number;

  /**
   * @generated from field: double x = 2;
   */
  x: number;

  /**
   * @generated from field: double y = 3;
   */
  y: number;
};

/**
 * Describes the message lightspeedduel.ws.MoveWaypoint.
 * Use `create(MoveWaypointSchema)` to create a new message.
 */
export const MoveWaypointSchema: GenMessage<MoveWaypoint> = /*@__PURE__*/
  messageDesc(file_proto_ws_messages, 7);

/**
 * Client → Server: Delete waypoint from route
 *
 * @generated from message lightspeedduel.ws.DeleteWaypoint
 */
export type DeleteWaypoint = Message<"lightspeedduel.ws.DeleteWaypoint"> & {
  /**
   * @generated from field: int32 index = 1;
   */
  index: number;
};

/**
 * Describes the message lightspeedduel.ws.DeleteWaypoint.
 * Use `create(DeleteWaypointSchema)` to create a new message.
 */
export const DeleteWaypointSchema: GenMessage<DeleteWaypoint> = /*@__PURE__*/
  messageDesc(file_proto_ws_messages, 8);

/**
 * Client → Server: Clear all waypoints
 *
 * @generated from message lightspeedduel.ws.ClearWaypoints
 */
export type ClearWaypoints = Message<"lightspeedduel.ws.ClearWaypoints"> & {
};

/**
 * Describes the message lightspeedduel.ws.ClearWaypoints.
 * Use `create(ClearWaypointsSchema)` to create a new message.
 */
export const ClearWaypointsSchema: GenMessage<ClearWaypoints> = /*@__PURE__*/
  messageDesc(file_proto_ws_messages, 9);

/**
 * Client → Server: Configure missile parameters
 *
 * @generated from message lightspeedduel.ws.ConfigureMissile
 */
export type ConfigureMissile = Message<"lightspeedduel.ws.ConfigureMissile"> & {
  /**
   * @generated from field: double missile_speed = 1;
   */
  missileSpeed: number;

  /**
   * @generated from field: double missile_agro = 2;
   */
  missileAgro: number;
};

/**
 * Describes the message lightspeedduel.ws.ConfigureMissile.
 * Use `create(ConfigureMissileSchema)` to create a new message.
 */
export const ConfigureMissileSchema: GenMessage<ConfigureMissile> = /*@__PURE__*/
  messageDesc(file_proto_ws_messages, 10);

/**
 * Client → Server: Add waypoint to missile route
 *
 * @generated from message lightspeedduel.ws.AddMissileWaypoint
 */
export type AddMissileWaypoint = Message<"lightspeedduel.ws.AddMissileWaypoint"> & {
  /**
   * @generated from field: string route_id = 1;
   */
  routeId: string;

  /**
   * @generated from field: double x = 2;
   */
  x: number;

  /**
   * @generated from field: double y = 3;
   */
  y: number;

  /**
   * @generated from field: double speed = 4;
   */
  speed: number;
};

/**
 * Describes the message lightspeedduel.ws.AddMissileWaypoint.
 * Use `create(AddMissileWaypointSchema)` to create a new message.
 */
export const AddMissileWaypointSchema: GenMessage<AddMissileWaypoint> = /*@__PURE__*/
  messageDesc(file_proto_ws_messages, 11);

/**
 * Client → Server: Update missile waypoint speed
 *
 * @generated from message lightspeedduel.ws.UpdateMissileWaypointSpeed
 */
export type UpdateMissileWaypointSpeed = Message<"lightspeedduel.ws.UpdateMissileWaypointSpeed"> & {
  /**
   * @generated from field: string route_id = 1;
   */
  routeId: string;

  /**
   * @generated from field: int32 index = 2;
   */
  index: number;

  /**
   * @generated from field: double speed = 3;
   */
  speed: number;
};

/**
 * Describes the message lightspeedduel.ws.UpdateMissileWaypointSpeed.
 * Use `create(UpdateMissileWaypointSpeedSchema)` to create a new message.
 */
export const UpdateMissileWaypointSpeedSchema: GenMessage<UpdateMissileWaypointSpeed> = /*@__PURE__*/
  messageDesc(file_proto_ws_messages, 12);

/**
 * Client → Server: Move missile waypoint position
 *
 * @generated from message lightspeedduel.ws.MoveMissileWaypoint
 */
export type MoveMissileWaypoint = Message<"lightspeedduel.ws.MoveMissileWaypoint"> & {
  /**
   * @generated from field: string route_id = 1;
   */
  routeId: string;

  /**
   * @generated from field: int32 index = 2;
   */
  index: number;

  /**
   * @generated from field: double x = 3;
   */
  x: number;

  /**
   * @generated from field: double y = 4;
   */
  y: number;
};

/**
 * Describes the message lightspeedduel.ws.MoveMissileWaypoint.
 * Use `create(MoveMissileWaypointSchema)` to create a new message.
 */
export const MoveMissileWaypointSchema: GenMessage<MoveMissileWaypoint> = /*@__PURE__*/
  messageDesc(file_proto_ws_messages, 13);

/**
 * Client → Server: Delete missile waypoint
 *
 * @generated from message lightspeedduel.ws.DeleteMissileWaypoint
 */
export type DeleteMissileWaypoint = Message<"lightspeedduel.ws.DeleteMissileWaypoint"> & {
  /**
   * @generated from field: string route_id = 1;
   */
  routeId: string;

  /**
   * @generated from field: int32 index = 2;
   */
  index: number;
};

/**
 * Describes the message lightspeedduel.ws.DeleteMissileWaypoint.
 * Use `create(DeleteMissileWaypointSchema)` to create a new message.
 */
export const DeleteMissileWaypointSchema: GenMessage<DeleteMissileWaypoint> = /*@__PURE__*/
  messageDesc(file_proto_ws_messages, 14);

/**
 * Client → Server: Clear missile route waypoints
 *
 * @generated from message lightspeedduel.ws.ClearMissileRoute
 */
export type ClearMissileRoute = Message<"lightspeedduel.ws.ClearMissileRoute"> & {
  /**
   * @generated from field: string route_id = 1;
   */
  routeId: string;
};

/**
 * Describes the message lightspeedduel.ws.ClearMissileRoute.
 * Use `create(ClearMissileRouteSchema)` to create a new message.
 */
export const ClearMissileRouteSchema: GenMessage<ClearMissileRoute> = /*@__PURE__*/
  messageDesc(file_proto_ws_messages, 15);

/**
 * Client → Server: Create new missile route
 *
 * @generated from message lightspeedduel.ws.AddMissileRoute
 */
export type AddMissileRoute = Message<"lightspeedduel.ws.AddMissileRoute"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message lightspeedduel.ws.AddMissileRoute.
 * Use `create(AddMissileRouteSchema)` to create a new message.
 */
export const AddMissileRouteSchema: GenMessage<AddMissileRoute> = /*@__PURE__*/
  messageDesc(file_proto_ws_messages, 16);

/**
 * Client → Server: Rename missile route
 *
 * @generated from message lightspeedduel.ws.RenameMissileRoute
 */
export type RenameMissileRoute = Message<"lightspeedduel.ws.RenameMissileRoute"> & {
  /**
   * @generated from field: string route_id = 1;
   */
  routeId: string;

  /**
   * @generated from field: string name = 2;
   */
  name: string;
};

/**
 * Describes the message lightspeedduel.ws.RenameMissileRoute.
 * Use `create(RenameMissileRouteSchema)` to create a new message.
 */
export const RenameMissileRouteSchema: GenMessage<RenameMissileRoute> = /*@__PURE__*/
  messageDesc(file_proto_ws_messages, 17);

/**
 * Client → Server: Delete missile route
 *
 * @generated from message lightspeedduel.ws.DeleteMissileRoute
 */
export type DeleteMissileRoute = Message<"lightspeedduel.ws.DeleteMissileRoute"> & {
  /**
   * @generated from field: string route_id = 1;
   */
  routeId: string;
};

/**
 * Describes the message lightspeedduel.ws.DeleteMissileRoute.
 * Use `create(DeleteMissileRouteSchema)` to create a new message.
 */
export const DeleteMissileRouteSchema: GenMessage<DeleteMissileRoute> = /*@__PURE__*/
  messageDesc(file_proto_ws_messages, 18);

/**
 * Client → Server: Set active missile route
 *
 * @generated from message lightspeedduel.ws.SetActiveMissileRoute
 */
export type SetActiveMissileRoute = Message<"lightspeedduel.ws.SetActiveMissileRoute"> & {
  /**
   * @generated from field: string route_id = 1;
   */
  routeId: string;
};

/**
 * Describes the message lightspeedduel.ws.SetActiveMissileRoute.
 * Use `create(SetActiveMissileRouteSchema)` to create a new message.
 */
export const SetActiveMissileRouteSchema: GenMessage<SetActiveMissileRoute> = /*@__PURE__*/
  messageDesc(file_proto_ws_messages, 19);

/**
 * Client → Server: Launch missile on route
 *
 * @generated from message lightspeedduel.ws.LaunchMissile
 */
export type LaunchMissile = Message<"lightspeedduel.ws.LaunchMissile"> & {
  /**
   * @generated from field: string route_id = 1;
   */
  routeId: string;
};

/**
 * Describes the message lightspeedduel.ws.LaunchMissile.
 * Use `create(LaunchMissileSchema)` to create a new message.
 */
export const LaunchMissileSchema: GenMessage<LaunchMissile> = /*@__PURE__*/
  messageDesc(file_proto_ws_messages, 20);

/**
 * Ship/ghost snapshot with position, velocity, and state
 *
 * @generated from message lightspeedduel.ws.Ghost
 */
export type Ghost = Message<"lightspeedduel.ws.Ghost"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: double x = 2;
   */
  x: number;

  /**
   * @generated from field: double y = 3;
   */
  y: number;

  /**
   * @generated from field: double vx = 4;
   */
  vx: number;

  /**
   * @generated from field: double vy = 5;
   */
  vy: number;

  /**
   * @generated from field: double t = 6;
   */
  t: number;

  /**
   * @generated from field: bool self = 7;
   */
  self: boolean;

  /**
   * @generated from field: repeated lightspeedduel.ws.Waypoint waypoints = 8;
   */
  waypoints: Waypoint[];

  /**
   * @generated from field: int32 current_waypoint_index = 9;
   */
  currentWaypointIndex: number;

  /**
   * @generated from field: int32 hp = 10;
   */
  hp: number;

  /**
   * @generated from field: int32 kills = 11;
   */
  kills: number;

  /**
   * @generated from field: optional lightspeedduel.ws.ShipHeatView heat = 12;
   */
  heat?: ShipHeatView;
};

/**
 * Describes the message lightspeedduel.ws.Ghost.
 * Use `create(GhostSchema)` to create a new message.
 */
export const GhostSchema: GenMessage<Ghost> = /*@__PURE__*/
  messageDesc(file_proto_ws_messages, 21);

/**
 * Waypoint with position and target speed
 *
 * @generated from message lightspeedduel.ws.Waypoint
 */
export type Waypoint = Message<"lightspeedduel.ws.Waypoint"> & {
  /**
   * @generated from field: double x = 1;
   */
  x: number;

  /**
   * @generated from field: double y = 2;
   */
  y: number;

  /**
   * @generated from field: double speed = 3;
   */
  speed: number;
};

/**
 * Describes the message lightspeedduel.ws.Waypoint.
 * Use `create(WaypointSchema)` to create a new message.
 */
export const WaypointSchema: GenMessage<Waypoint> = /*@__PURE__*/
  messageDesc(file_proto_ws_messages, 22);

/**
 * Room constants (speed of light, world dimensions)
 *
 * @generated from message lightspeedduel.ws.RoomMeta
 */
export type RoomMeta = Message<"lightspeedduel.ws.RoomMeta"> & {
  /**
   * Speed of light
   *
   * @generated from field: double c = 1;
   */
  c: number;

  /**
   * World width
   *
   * @generated from field: double w = 2;
   */
  w: number;

  /**
   * World height
   *
   * @generated from field: double h = 3;
   */
  h: number;
};

/**
 * Describes the message lightspeedduel.ws.RoomMeta.
 * Use `create(RoomMetaSchema)` to create a new message.
 */
export const RoomMetaSchema: GenMessage<RoomMeta> = /*@__PURE__*/
  messageDesc(file_proto_ws_messages, 23);

/**
 * Missile snapshot with position, velocity, and targeting
 *
 * @generated from message lightspeedduel.ws.Missile
 */
export type Missile = Message<"lightspeedduel.ws.Missile"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string owner = 2;
   */
  owner: string;

  /**
   * @generated from field: bool self = 3;
   */
  self: boolean;

  /**
   * @generated from field: double x = 4;
   */
  x: number;

  /**
   * @generated from field: double y = 5;
   */
  y: number;

  /**
   * @generated from field: double vx = 6;
   */
  vx: number;

  /**
   * @generated from field: double vy = 7;
   */
  vy: number;

  /**
   * @generated from field: double t = 8;
   */
  t: number;

  /**
   * @generated from field: double agro_radius = 9;
   */
  agroRadius: number;

  /**
   * @generated from field: double lifetime = 10;
   */
  lifetime: number;

  /**
   * @generated from field: double launch_time = 11;
   */
  launchTime: number;

  /**
   * @generated from field: double expires_at = 12;
   */
  expiresAt: number;

  /**
   * @generated from field: string target_id = 13;
   */
  targetId: string;

  /**
   * @generated from field: optional lightspeedduel.ws.ShipHeatView heat = 14;
   */
  heat?: ShipHeatView;
};

/**
 * Describes the message lightspeedduel.ws.Missile.
 * Use `create(MissileSchema)` to create a new message.
 */
export const MissileSchema: GenMessage<Missile> = /*@__PURE__*/
  messageDesc(file_proto_ws_messages, 24);

/**
 * Missile configuration parameters
 *
 * @generated from message lightspeedduel.ws.MissileConfig
 */
export type MissileConfig = Message<"lightspeedduel.ws.MissileConfig"> & {
  /**
   * @generated from field: double speed = 1;
   */
  speed: number;

  /**
   * @generated from field: double speed_min = 2;
   */
  speedMin: number;

  /**
   * @generated from field: double speed_max = 3;
   */
  speedMax: number;

  /**
   * @generated from field: double agro_min = 4;
   */
  agroMin: number;

  /**
   * @generated from field: double agro_radius = 5;
   */
  agroRadius: number;

  /**
   * @generated from field: double lifetime = 6;
   */
  lifetime: number;

  /**
   * @generated from field: optional lightspeedduel.ws.HeatParams heat_config = 7;
   */
  heatConfig?: HeatParams;
};

/**
 * Describes the message lightspeedduel.ws.MissileConfig.
 * Use `create(MissileConfigSchema)` to create a new message.
 */
export const MissileConfigSchema: GenMessage<MissileConfig> = /*@__PURE__*/
  messageDesc(file_proto_ws_messages, 25);

/**
 * Missile route definition
 *
 * @generated from message lightspeedduel.ws.MissileRoute
 */
export type MissileRoute = Message<"lightspeedduel.ws.MissileRoute"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * @generated from field: repeated lightspeedduel.ws.Waypoint waypoints = 3;
   */
  waypoints: Waypoint[];
};

/**
 * Describes the message lightspeedduel.ws.MissileRoute.
 * Use `create(MissileRouteSchema)` to create a new message.
 */
export const MissileRouteSchema: GenMessage<MissileRoute> = /*@__PURE__*/
  messageDesc(file_proto_ws_messages, 26);

/**
 * Heat view (abbreviated field names match JSON)
 * Used for both ships and missiles
 *
 * @generated from message lightspeedduel.ws.ShipHeatView
 */
export type ShipHeatView = Message<"lightspeedduel.ws.ShipHeatView"> & {
  /**
   * value
   *
   * @generated from field: double v = 1;
   */
  v: number;

  /**
   * max
   *
   * @generated from field: double m = 2;
   */
  m: number;

  /**
   * warnAt
   *
   * @generated from field: double w = 3;
   */
  w: number;

  /**
   * overheatAt
   *
   * @generated from field: double o = 4;
   */
  o: number;

  /**
   * markerSpeed
   *
   * @generated from field: double ms = 5;
   */
  ms: number;

  /**
   * stallUntil
   *
   * @generated from field: double su = 6;
   */
  su: number;

  /**
   * kUp
   *
   * @generated from field: double ku = 7;
   */
  ku: number;

  /**
   * kDown
   *
   * @generated from field: double kd = 8;
   */
  kd: number;

  /**
   * exp
   *
   * @generated from field: double ex = 9;
   */
  ex: number;
};

/**
 * Describes the message lightspeedduel.ws.ShipHeatView.
 * Use `create(ShipHeatViewSchema)` to create a new message.
 */
export const ShipHeatViewSchema: GenMessage<ShipHeatView> = /*@__PURE__*/
  messageDesc(file_proto_ws_messages, 27);

/**
 * Heat configuration parameters
 *
 * @generated from message lightspeedduel.ws.HeatParams
 */
export type HeatParams = Message<"lightspeedduel.ws.HeatParams"> & {
  /**
   * @generated from field: double max = 1;
   */
  max: number;

  /**
   * @generated from field: double warn_at = 2;
   */
  warnAt: number;

  /**
   * @generated from field: double overheat_at = 3;
   */
  overheatAt: number;

  /**
   * @generated from field: double marker_speed = 4;
   */
  markerSpeed: number;

  /**
   * @generated from field: double k_up = 5;
   */
  kUp: number;

  /**
   * @generated from field: double k_down = 6;
   */
  kDown: number;

  /**
   * @generated from field: double exp = 7;
   */
  exp: number;
};

/**
 * Describes the message lightspeedduel.ws.HeatParams.
 * Use `create(HeatParamsSchema)` to create a new message.
 */
export const HeatParamsSchema: GenMessage<HeatParams> = /*@__PURE__*/
  messageDesc(file_proto_ws_messages, 28);

/**
 * Upgrade effect definition
 *
 * @generated from message lightspeedduel.ws.UpgradeEffect
 */
export type UpgradeEffect = Message<"lightspeedduel.ws.UpgradeEffect"> & {
  /**
   * @generated from field: lightspeedduel.ws.UpgradeEffectType type = 1;
   */
  type: UpgradeEffectType;

  /**
   * @generated from oneof lightspeedduel.ws.UpgradeEffect.value
   */
  value: {
    /**
     * For speed/heat multipliers
     *
     * @generated from field: double multiplier = 2;
     */
    value: number;
    case: "multiplier";
  } | {
    /**
     * For missile unlocks (e.g., "scout")
     *
     * @generated from field: string unlock_id = 3;
     */
    value: string;
    case: "unlockId";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message lightspeedduel.ws.UpgradeEffect.
 * Use `create(UpgradeEffectSchema)` to create a new message.
 */
export const UpgradeEffectSchema: GenMessage<UpgradeEffect> = /*@__PURE__*/
  messageDesc(file_proto_ws_messages, 29);

/**
 * Player capabilities (computed from completed upgrades)
 *
 * @generated from message lightspeedduel.ws.PlayerCapabilities
 */
export type PlayerCapabilities = Message<"lightspeedduel.ws.PlayerCapabilities"> & {
  /**
   * @generated from field: double speed_multiplier = 1;
   */
  speedMultiplier: number;

  /**
   * @generated from field: repeated string unlocked_missiles = 2;
   */
  unlockedMissiles: string[];

  /**
   * @generated from field: double heat_capacity = 3;
   */
  heatCapacity: number;

  /**
   * @generated from field: double heat_efficiency = 4;
   */
  heatEfficiency: number;
};

/**
 * Describes the message lightspeedduel.ws.PlayerCapabilities.
 * Use `create(PlayerCapabilitiesSchema)` to create a new message.
 */
export const PlayerCapabilitiesSchema: GenMessage<PlayerCapabilities> = /*@__PURE__*/
  messageDesc(file_proto_ws_messages, 30);

/**
 * DAG node state
 *
 * @generated from message lightspeedduel.ws.DagNode
 */
export type DagNode = Message<"lightspeedduel.ws.DagNode"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: lightspeedduel.ws.DagNodeKind kind = 2;
   */
  kind: DagNodeKind;

  /**
   * @generated from field: string label = 3;
   */
  label: string;

  /**
   * @generated from field: lightspeedduel.ws.DagNodeStatus status = 4;
   */
  status: DagNodeStatus;

  /**
   * Time remaining for in-progress jobs
   *
   * @generated from field: double remaining_s = 5;
   */
  remainingS: number;

  /**
   * Total duration
   *
   * @generated from field: double duration_s = 6;
   */
  durationS: number;

  /**
   * Can be repeated after completion
   *
   * @generated from field: bool repeatable = 7;
   */
  repeatable: boolean;

  /**
   * Only populated for upgrade nodes
   *
   * @generated from field: repeated lightspeedduel.ws.UpgradeEffect effects = 8;
   */
  effects: UpgradeEffect[];
};

/**
 * Describes the message lightspeedduel.ws.DagNode.
 * Use `create(DagNodeSchema)` to create a new message.
 */
export const DagNodeSchema: GenMessage<DagNode> = /*@__PURE__*/
  messageDesc(file_proto_ws_messages, 31);

/**
 * Full DAG state
 *
 * @generated from message lightspeedduel.ws.DagState
 */
export type DagState = Message<"lightspeedduel.ws.DagState"> & {
  /**
   * @generated from field: repeated lightspeedduel.ws.DagNode nodes = 1;
   */
  nodes: DagNode[];
};

/**
 * Describes the message lightspeedduel.ws.DagState.
 * Use `create(DagStateSchema)` to create a new message.
 */
export const DagStateSchema: GenMessage<DagState> = /*@__PURE__*/
  messageDesc(file_proto_ws_messages, 32);

/**
 * Client → Server: Start a DAG node
 *
 * @generated from message lightspeedduel.ws.DagStart
 */
export type DagStart = Message<"lightspeedduel.ws.DagStart"> & {
  /**
   * @generated from field: string node_id = 1;
   */
  nodeId: string;
};

/**
 * Describes the message lightspeedduel.ws.DagStart.
 * Use `create(DagStartSchema)` to create a new message.
 */
export const DagStartSchema: GenMessage<DagStart> = /*@__PURE__*/
  messageDesc(file_proto_ws_messages, 33);

/**
 * Client → Server: Cancel a DAG node
 *
 * @generated from message lightspeedduel.ws.DagCancel
 */
export type DagCancel = Message<"lightspeedduel.ws.DagCancel"> & {
  /**
   * @generated from field: string node_id = 1;
   */
  nodeId: string;
};

/**
 * Describes the message lightspeedduel.ws.DagCancel.
 * Use `create(DagCancelSchema)` to create a new message.
 */
export const DagCancelSchema: GenMessage<DagCancel> = /*@__PURE__*/
  messageDesc(file_proto_ws_messages, 34);

/**
 * Client → Server: Acknowledge story dialogue
 *
 * @generated from message lightspeedduel.ws.DagStoryAck
 */
export type DagStoryAck = Message<"lightspeedduel.ws.DagStoryAck"> & {
  /**
   * @generated from field: string node_id = 1;
   */
  nodeId: string;

  /**
   * Empty if just continue (no choice)
   *
   * @generated from field: string choice_id = 2;
   */
  choiceId: string;
};

/**
 * Describes the message lightspeedduel.ws.DagStoryAck.
 * Use `create(DagStoryAckSchema)` to create a new message.
 */
export const DagStoryAckSchema: GenMessage<DagStoryAck> = /*@__PURE__*/
  messageDesc(file_proto_ws_messages, 35);

/**
 * Client → Server: Request full DAG list
 *
 * @generated from message lightspeedduel.ws.DagList
 */
export type DagList = Message<"lightspeedduel.ws.DagList"> & {
};

/**
 * Describes the message lightspeedduel.ws.DagList.
 * Use `create(DagListSchema)` to create a new message.
 */
export const DagListSchema: GenMessage<DagList> = /*@__PURE__*/
  messageDesc(file_proto_ws_messages, 36);

/**
 * Server → Client: DAG list response
 *
 * @generated from message lightspeedduel.ws.DagListResponse
 */
export type DagListResponse = Message<"lightspeedduel.ws.DagListResponse"> & {
  /**
   * @generated from field: lightspeedduel.ws.DagState dag = 1;
   */
  dag?: DagState;
};

/**
 * Describes the message lightspeedduel.ws.DagListResponse.
 * Use `create(DagListResponseSchema)` to create a new message.
 */
export const DagListResponseSchema: GenMessage<DagListResponse> = /*@__PURE__*/
  messageDesc(file_proto_ws_messages, 37);

/**
 * Inventory item
 *
 * @generated from message lightspeedduel.ws.InventoryItem
 */
export type InventoryItem = Message<"lightspeedduel.ws.InventoryItem"> & {
  /**
   * "missile", "component", etc.
   *
   * @generated from field: string type = 1;
   */
  type: string;

  /**
   * Specific variant identifier
   *
   * @generated from field: string variant_id = 2;
   */
  variantId: string;

  /**
   * Heat capacity for this item
   *
   * @generated from field: double heat_capacity = 3;
   */
  heatCapacity: number;

  /**
   * Stack quantity
   *
   * @generated from field: int32 quantity = 4;
   */
  quantity: number;
};

/**
 * Describes the message lightspeedduel.ws.InventoryItem.
 * Use `create(InventoryItemSchema)` to create a new message.
 */
export const InventoryItemSchema: GenMessage<InventoryItem> = /*@__PURE__*/
  messageDesc(file_proto_ws_messages, 38);

/**
 * Player inventory
 *
 * @generated from message lightspeedduel.ws.Inventory
 */
export type Inventory = Message<"lightspeedduel.ws.Inventory"> & {
  /**
   * @generated from field: repeated lightspeedduel.ws.InventoryItem items = 1;
   */
  items: InventoryItem[];
};

/**
 * Describes the message lightspeedduel.ws.Inventory.
 * Use `create(InventorySchema)` to create a new message.
 */
export const InventorySchema: GenMessage<Inventory> = /*@__PURE__*/
  messageDesc(file_proto_ws_messages, 39);

/**
 * Story dialogue choice option
 *
 * @generated from message lightspeedduel.ws.StoryDialogueChoice
 */
export type StoryDialogueChoice = Message<"lightspeedduel.ws.StoryDialogueChoice"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string text = 2;
   */
  text: string;
};

/**
 * Describes the message lightspeedduel.ws.StoryDialogueChoice.
 * Use `create(StoryDialogueChoiceSchema)` to create a new message.
 */
export const StoryDialogueChoiceSchema: GenMessage<StoryDialogueChoice> = /*@__PURE__*/
  messageDesc(file_proto_ws_messages, 40);

/**
 * Story tutorial tip
 *
 * @generated from message lightspeedduel.ws.StoryTutorialTip
 */
export type StoryTutorialTip = Message<"lightspeedduel.ws.StoryTutorialTip"> & {
  /**
   * @generated from field: string title = 1;
   */
  title: string;

  /**
   * @generated from field: string text = 2;
   */
  text: string;
};

/**
 * Describes the message lightspeedduel.ws.StoryTutorialTip.
 * Use `create(StoryTutorialTipSchema)` to create a new message.
 */
export const StoryTutorialTipSchema: GenMessage<StoryTutorialTip> = /*@__PURE__*/
  messageDesc(file_proto_ws_messages, 41);

/**
 * Story dialogue content
 *
 * @generated from message lightspeedduel.ws.StoryDialogue
 */
export type StoryDialogue = Message<"lightspeedduel.ws.StoryDialogue"> & {
  /**
   * @generated from field: string speaker = 1;
   */
  speaker: string;

  /**
   * @generated from field: string text = 2;
   */
  text: string;

  /**
   * @generated from field: lightspeedduel.ws.StoryIntent intent = 3;
   */
  intent: StoryIntent;

  /**
   * Empty = default "Continue"
   *
   * @generated from field: string continue_label = 4;
   */
  continueLabel: string;

  /**
   * Empty = show continue button
   *
   * @generated from field: repeated lightspeedduel.ws.StoryDialogueChoice choices = 5;
   */
  choices: StoryDialogueChoice[];

  /**
   * Optional gameplay hint
   *
   * @generated from field: optional lightspeedduel.ws.StoryTutorialTip tutorial_tip = 6;
   */
  tutorialTip?: StoryTutorialTip;
};

/**
 * Describes the message lightspeedduel.ws.StoryDialogue.
 * Use `create(StoryDialogueSchema)` to create a new message.
 */
export const StoryDialogueSchema: GenMessage<StoryDialogue> = /*@__PURE__*/
  messageDesc(file_proto_ws_messages, 42);

/**
 * Story event (history entry)
 *
 * @generated from message lightspeedduel.ws.StoryEvent
 */
export type StoryEvent = Message<"lightspeedduel.ws.StoryEvent"> & {
  /**
   * @generated from field: string chapter_id = 1;
   */
  chapterId: string;

  /**
   * @generated from field: string node_id = 2;
   */
  nodeId: string;

  /**
   * @generated from field: double timestamp = 3;
   */
  timestamp: number;
};

/**
 * Describes the message lightspeedduel.ws.StoryEvent.
 * Use `create(StoryEventSchema)` to create a new message.
 */
export const StoryEventSchema: GenMessage<StoryEvent> = /*@__PURE__*/
  messageDesc(file_proto_ws_messages, 43);

/**
 * Story state
 *
 * @generated from message lightspeedduel.ws.StoryState
 */
export type StoryState = Message<"lightspeedduel.ws.StoryState"> & {
  /**
   * Currently active story node ID
   *
   * @generated from field: string active_node = 1;
   */
  activeNode: string;

  /**
   * Full dialogue content
   *
   * @generated from field: optional lightspeedduel.ws.StoryDialogue dialogue = 2;
   */
  dialogue?: StoryDialogue;

  /**
   * Available story node IDs
   *
   * @generated from field: repeated string available = 3;
   */
  available: string[];

  /**
   * Story flags for branching
   *
   * @generated from field: map<string, bool> flags = 4;
   */
  flags: { [key: string]: boolean };

  /**
   * Recent story events
   *
   * @generated from field: repeated lightspeedduel.ws.StoryEvent recent_events = 5;
   */
  recentEvents: StoryEvent[];
};

/**
 * Describes the message lightspeedduel.ws.StoryState.
 * Use `create(StoryStateSchema)` to create a new message.
 */
export const StoryStateSchema: GenMessage<StoryState> = /*@__PURE__*/
  messageDesc(file_proto_ws_messages, 44);

/**
 * Client → Server: Spawn mission wave
 *
 * @generated from message lightspeedduel.ws.MissionSpawnWave
 */
export type MissionSpawnWave = Message<"lightspeedduel.ws.MissionSpawnWave"> & {
  /**
   * 1, 2, or 3
   *
   * @generated from field: int32 wave_index = 1;
   */
  waveIndex: number;
};

/**
 * Describes the message lightspeedduel.ws.MissionSpawnWave.
 * Use `create(MissionSpawnWaveSchema)` to create a new message.
 */
export const MissionSpawnWaveSchema: GenMessage<MissionSpawnWave> = /*@__PURE__*/
  messageDesc(file_proto_ws_messages, 45);

/**
 * Client → Server: Trigger mission story event
 *
 * @generated from message lightspeedduel.ws.MissionStoryEvent
 */
export type MissionStoryEvent = Message<"lightspeedduel.ws.MissionStoryEvent"> & {
  /**
   * e.g. "mission:start", "mission:beacon-locked"
   *
   * @generated from field: string event = 1;
   */
  event: string;

  /**
   * Beacon index for beacon-specific events
   *
   * @generated from field: int32 beacon = 2;
   */
  beacon: number;
};

/**
 * Describes the message lightspeedduel.ws.MissionStoryEvent.
 * Use `create(MissionStoryEventSchema)` to create a new message.
 */
export const MissionStoryEventSchema: GenMessage<MissionStoryEvent> = /*@__PURE__*/
  messageDesc(file_proto_ws_messages, 46);

/**
 * Server → Client: Mission beacon authoritative snapshot
 *
 * @generated from message lightspeedduel.ws.MissionBeaconSnapshot
 */
export type MissionBeaconSnapshot = Message<"lightspeedduel.ws.MissionBeaconSnapshot"> & {
  /**
   * @generated from field: string mission_id = 1;
   */
  missionId: string;

  /**
   * @generated from field: uint64 layout_seed = 2;
   */
  layoutSeed: bigint;

  /**
   * @generated from field: double server_time = 3;
   */
  serverTime: number;

  /**
   * @generated from field: repeated lightspeedduel.ws.MissionBeaconDefinition beacons = 4;
   */
  beacons: MissionBeaconDefinition[];

  /**
   * @generated from field: repeated lightspeedduel.ws.MissionBeaconPlayer players = 5;
   */
  players: MissionBeaconPlayer[];

  /**
   * @generated from field: repeated lightspeedduel.ws.MissionBeaconEncounter encounters = 6;
   */
  encounters: MissionBeaconEncounter[];
};

/**
 * Describes the message lightspeedduel.ws.MissionBeaconSnapshot.
 * Use `create(MissionBeaconSnapshotSchema)` to create a new message.
 */
export const MissionBeaconSnapshotSchema: GenMessage<MissionBeaconSnapshot> = /*@__PURE__*/
  messageDesc(file_proto_ws_messages, 47);

/**
 * @generated from message lightspeedduel.ws.MissionBeaconDefinition
 */
export type MissionBeaconDefinition = Message<"lightspeedduel.ws.MissionBeaconDefinition"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: int32 ordinal = 2;
   */
  ordinal: number;

  /**
   * @generated from field: double x = 3;
   */
  x: number;

  /**
   * @generated from field: double y = 4;
   */
  y: number;

  /**
   * @generated from field: double radius = 5;
   */
  radius: number;

  /**
   * @generated from field: int64 seed = 6;
   */
  seed: bigint;
};

/**
 * Describes the message lightspeedduel.ws.MissionBeaconDefinition.
 * Use `create(MissionBeaconDefinitionSchema)` to create a new message.
 */
export const MissionBeaconDefinitionSchema: GenMessage<MissionBeaconDefinition> = /*@__PURE__*/
  messageDesc(file_proto_ws_messages, 48);

/**
 * @generated from message lightspeedduel.ws.MissionBeaconPlayer
 */
export type MissionBeaconPlayer = Message<"lightspeedduel.ws.MissionBeaconPlayer"> & {
  /**
   * @generated from field: string player_id = 1;
   */
  playerId: string;

  /**
   * @generated from field: int32 current_index = 2;
   */
  currentIndex: number;

  /**
   * @generated from field: double hold_accum = 3;
   */
  holdAccum: number;

  /**
   * @generated from field: double hold_required = 4;
   */
  holdRequired: number;

  /**
   * @generated from field: string active_beacon = 5;
   */
  activeBeacon: string;

  /**
   * @generated from field: repeated string discovered = 6;
   */
  discovered: string[];

  /**
   * @generated from field: repeated string completed = 7;
   */
  completed: string[];

  /**
   * @generated from field: map<string, double> cooldowns = 8;
   */
  cooldowns: { [key: string]: number };
};

/**
 * Describes the message lightspeedduel.ws.MissionBeaconPlayer.
 * Use `create(MissionBeaconPlayerSchema)` to create a new message.
 */
export const MissionBeaconPlayerSchema: GenMessage<MissionBeaconPlayer> = /*@__PURE__*/
  messageDesc(file_proto_ws_messages, 49);

/**
 * Server → Client: incremental mission beacon updates
 *
 * @generated from message lightspeedduel.ws.MissionBeaconDelta
 */
export type MissionBeaconDelta = Message<"lightspeedduel.ws.MissionBeaconDelta"> & {
  /**
   * @generated from field: repeated lightspeedduel.ws.MissionBeaconPlayerDelta players = 1;
   */
  players: MissionBeaconPlayerDelta[];

  /**
   * @generated from field: repeated lightspeedduel.ws.MissionBeaconEncounterEvent encounters = 2;
   */
  encounters: MissionBeaconEncounterEvent[];
};

/**
 * Describes the message lightspeedduel.ws.MissionBeaconDelta.
 * Use `create(MissionBeaconDeltaSchema)` to create a new message.
 */
export const MissionBeaconDeltaSchema: GenMessage<MissionBeaconDelta> = /*@__PURE__*/
  messageDesc(file_proto_ws_messages, 50);

/**
 * @generated from message lightspeedduel.ws.MissionBeaconPlayerDelta
 */
export type MissionBeaconPlayerDelta = Message<"lightspeedduel.ws.MissionBeaconPlayerDelta"> & {
  /**
   * @generated from field: lightspeedduel.ws.MissionBeaconDeltaType type = 1;
   */
  type: MissionBeaconDeltaType;

  /**
   * @generated from field: string player_id = 2;
   */
  playerId: string;

  /**
   * @generated from field: string beacon_id = 3;
   */
  beaconId: string;

  /**
   * @generated from field: int32 ordinal = 4;
   */
  ordinal: number;

  /**
   * @generated from field: double hold_accum = 5;
   */
  holdAccum: number;

  /**
   * @generated from field: double hold_required = 6;
   */
  holdRequired: number;

  /**
   * @generated from field: double cooldown_until = 7;
   */
  cooldownUntil: number;

  /**
   * @generated from field: double server_time = 8;
   */
  serverTime: number;
};

/**
 * Describes the message lightspeedduel.ws.MissionBeaconPlayerDelta.
 * Use `create(MissionBeaconPlayerDeltaSchema)` to create a new message.
 */
export const MissionBeaconPlayerDeltaSchema: GenMessage<MissionBeaconPlayerDelta> = /*@__PURE__*/
  messageDesc(file_proto_ws_messages, 51);

/**
 * @generated from message lightspeedduel.ws.MissionBeaconEncounter
 */
export type MissionBeaconEncounter = Message<"lightspeedduel.ws.MissionBeaconEncounter"> & {
  /**
   * @generated from field: string encounter_id = 1;
   */
  encounterId: string;

  /**
   * @generated from field: string beacon_id = 2;
   */
  beaconId: string;

  /**
   * @generated from field: int32 wave_index = 3;
   */
  waveIndex: number;

  /**
   * @generated from field: double spawned_at = 4;
   */
  spawnedAt: number;

  /**
   * @generated from field: double expires_at = 5;
   */
  expiresAt: number;
};

/**
 * Describes the message lightspeedduel.ws.MissionBeaconEncounter.
 * Use `create(MissionBeaconEncounterSchema)` to create a new message.
 */
export const MissionBeaconEncounterSchema: GenMessage<MissionBeaconEncounter> = /*@__PURE__*/
  messageDesc(file_proto_ws_messages, 52);

/**
 * @generated from message lightspeedduel.ws.MissionBeaconEncounterEvent
 */
export type MissionBeaconEncounterEvent = Message<"lightspeedduel.ws.MissionBeaconEncounterEvent"> & {
  /**
   * @generated from field: lightspeedduel.ws.MissionEncounterEventType type = 1;
   */
  type: MissionEncounterEventType;

  /**
   * @generated from field: string encounter_id = 2;
   */
  encounterId: string;

  /**
   * @generated from field: string beacon_id = 3;
   */
  beaconId: string;

  /**
   * @generated from field: int32 wave_index = 4;
   */
  waveIndex: number;

  /**
   * @generated from field: double spawned_at = 5;
   */
  spawnedAt: number;

  /**
   * @generated from field: double expires_at = 6;
   */
  expiresAt: number;

  /**
   * @generated from field: string reason = 7;
   */
  reason: string;
};

/**
 * Describes the message lightspeedduel.ws.MissionBeaconEncounterEvent.
 * Use `create(MissionBeaconEncounterEventSchema)` to create a new message.
 */
export const MissionBeaconEncounterEventSchema: GenMessage<MissionBeaconEncounterEvent> = /*@__PURE__*/
  messageDesc(file_proto_ws_messages, 53);

/**
 * DAG node status enum
 *
 * @generated from enum lightspeedduel.ws.DagNodeStatus
 */
export enum DagNodeStatus {
  /**
   * @generated from enum value: DAG_NODE_STATUS_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: DAG_NODE_STATUS_LOCKED = 1;
   */
  LOCKED = 1,

  /**
   * @generated from enum value: DAG_NODE_STATUS_AVAILABLE = 2;
   */
  AVAILABLE = 2,

  /**
   * @generated from enum value: DAG_NODE_STATUS_IN_PROGRESS = 3;
   */
  IN_PROGRESS = 3,

  /**
   * @generated from enum value: DAG_NODE_STATUS_COMPLETED = 4;
   */
  COMPLETED = 4,
}

/**
 * Describes the enum lightspeedduel.ws.DagNodeStatus.
 */
export const DagNodeStatusSchema: GenEnum<DagNodeStatus> = /*@__PURE__*/
  enumDesc(file_proto_ws_messages, 0);

/**
 * DAG node kind enum
 *
 * @generated from enum lightspeedduel.ws.DagNodeKind
 */
export enum DagNodeKind {
  /**
   * @generated from enum value: DAG_NODE_KIND_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: DAG_NODE_KIND_FACTORY = 1;
   */
  FACTORY = 1,

  /**
   * @generated from enum value: DAG_NODE_KIND_UNIT = 2;
   */
  UNIT = 2,

  /**
   * @generated from enum value: DAG_NODE_KIND_STORY = 3;
   */
  STORY = 3,

  /**
   * @generated from enum value: DAG_NODE_KIND_CRAFT = 4;
   */
  CRAFT = 4,
}

/**
 * Describes the enum lightspeedduel.ws.DagNodeKind.
 */
export const DagNodeKindSchema: GenEnum<DagNodeKind> = /*@__PURE__*/
  enumDesc(file_proto_ws_messages, 1);

/**
 * Upgrade effect type enum
 *
 * @generated from enum lightspeedduel.ws.UpgradeEffectType
 */
export enum UpgradeEffectType {
  /**
   * @generated from enum value: UPGRADE_EFFECT_TYPE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: UPGRADE_EFFECT_TYPE_SPEED_MULTIPLIER = 1;
   */
  SPEED_MULTIPLIER = 1,

  /**
   * @generated from enum value: UPGRADE_EFFECT_TYPE_MISSILE_UNLOCK = 2;
   */
  MISSILE_UNLOCK = 2,

  /**
   * @generated from enum value: UPGRADE_EFFECT_TYPE_HEAT_CAPACITY = 3;
   */
  HEAT_CAPACITY = 3,

  /**
   * @generated from enum value: UPGRADE_EFFECT_TYPE_HEAT_EFFICIENCY = 4;
   */
  HEAT_EFFICIENCY = 4,
}

/**
 * Describes the enum lightspeedduel.ws.UpgradeEffectType.
 */
export const UpgradeEffectTypeSchema: GenEnum<UpgradeEffectType> = /*@__PURE__*/
  enumDesc(file_proto_ws_messages, 2);

/**
 * Story intent enum
 *
 * @generated from enum lightspeedduel.ws.StoryIntent
 */
export enum StoryIntent {
  /**
   * @generated from enum value: STORY_INTENT_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: STORY_INTENT_FACTORY = 1;
   */
  FACTORY = 1,

  /**
   * @generated from enum value: STORY_INTENT_UNIT = 2;
   */
  UNIT = 2,
}

/**
 * Describes the enum lightspeedduel.ws.StoryIntent.
 */
export const StoryIntentSchema: GenEnum<StoryIntent> = /*@__PURE__*/
  enumDesc(file_proto_ws_messages, 3);

/**
 * @generated from enum lightspeedduel.ws.MissionBeaconDeltaType
 */
export enum MissionBeaconDeltaType {
  /**
   * @generated from enum value: MISSION_BEACON_DELTA_UNSPECIFIED = 0;
   */
  MISSION_BEACON_DELTA_UNSPECIFIED = 0,

  /**
   * @generated from enum value: MISSION_BEACON_DELTA_DISCOVERED = 1;
   */
  MISSION_BEACON_DELTA_DISCOVERED = 1,

  /**
   * @generated from enum value: MISSION_BEACON_DELTA_HOLD_PROGRESS = 2;
   */
  MISSION_BEACON_DELTA_HOLD_PROGRESS = 2,

  /**
   * @generated from enum value: MISSION_BEACON_DELTA_HOLD_RESET = 3;
   */
  MISSION_BEACON_DELTA_HOLD_RESET = 3,

  /**
   * @generated from enum value: MISSION_BEACON_DELTA_LOCKED = 4;
   */
  MISSION_BEACON_DELTA_LOCKED = 4,

  /**
   * @generated from enum value: MISSION_BEACON_DELTA_COOLDOWN = 5;
   */
  MISSION_BEACON_DELTA_COOLDOWN = 5,

  /**
   * @generated from enum value: MISSION_BEACON_DELTA_MISSION_COMPLETED = 6;
   */
  MISSION_BEACON_DELTA_MISSION_COMPLETED = 6,
}

/**
 * Describes the enum lightspeedduel.ws.MissionBeaconDeltaType.
 */
export const MissionBeaconDeltaTypeSchema: GenEnum<MissionBeaconDeltaType> = /*@__PURE__*/
  enumDesc(file_proto_ws_messages, 4);

/**
 * @generated from enum lightspeedduel.ws.MissionEncounterEventType
 */
export enum MissionEncounterEventType {
  /**
   * @generated from enum value: MISSION_ENCOUNTER_EVENT_UNSPECIFIED = 0;
   */
  MISSION_ENCOUNTER_EVENT_UNSPECIFIED = 0,

  /**
   * @generated from enum value: MISSION_ENCOUNTER_EVENT_SPAWNED = 1;
   */
  MISSION_ENCOUNTER_EVENT_SPAWNED = 1,

  /**
   * @generated from enum value: MISSION_ENCOUNTER_EVENT_CLEARED = 2;
   */
  MISSION_ENCOUNTER_EVENT_CLEARED = 2,

  /**
   * @generated from enum value: MISSION_ENCOUNTER_EVENT_TIMEOUT = 3;
   */
  MISSION_ENCOUNTER_EVENT_TIMEOUT = 3,

  /**
   * @generated from enum value: MISSION_ENCOUNTER_EVENT_PURGED = 4;
   */
  MISSION_ENCOUNTER_EVENT_PURGED = 4,
}

/**
 * Describes the enum lightspeedduel.ws.MissionEncounterEventType.
 */
export const MissionEncounterEventTypeSchema: GenEnum<MissionEncounterEventType> = /*@__PURE__*/
  enumDesc(file_proto_ws_messages, 5);

