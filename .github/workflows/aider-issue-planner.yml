name: Aider Issue Planner

on:
  issues:
    types: [opened, labeled]

permissions:
  contents: read
  issues: write
  pull-requests: read

jobs:
  plan:
    runs-on: ubuntu-latest
    if: |
      contains(github.event.issue.labels.*.name, 'feature') ||
      contains(github.event.issue.labels.*.name, 'bug') ||
      contains(github.event.issue.labels.*.name, 'research')

    steps:
      - name: Check if user is a collaborator
        id: collaborator
        env:
          GH_TOKEN: ${{ github.token }}
          ISSUE_AUTHOR: ${{ github.event.issue.user.login }}
          REPO: ${{ github.repository }}
        run: |
          echo "Checking if $ISSUE_AUTHOR is a collaborator..."
          if gh api repos/$REPO/collaborators/$ISSUE_AUTHOR --silent; then
            echo "User is collaborator ‚úÖ"
          else
            echo "User $ISSUE_AUTHOR is not a collaborator ‚ùå"
            echo "Skipping workflow."
            exit 0
          fi

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Python and Aider
        run: |
          python -m pip install --upgrade pip
          pip install aider-install
          aider-install

      - name: Prepare Aider prompt
        id: prep
        run: |
          LABELS="${{ toJson(github.event.issue.labels.*.name) }}"
          ISSUE_TITLE="${{ github.event.issue.title }}"
          ISSUE_BODY="${{ github.event.issue.body }}"
          ISSUE_USER="${{ github.event.issue.user.login }}"

          if echo "$LABELS" | grep -iq "bug"; then
            MODE="bug"
            INSTRUCTION="Analyze this issue as a BUG. Identify likely causes, describe how to reproduce it, and propose a fix plan."
          elif echo "$LABELS" | grep -iq "feature"; then
            MODE="feature"
            INSTRUCTION="Treat this issue as a FEATURE request. Design a clear implementation plan."
          else
            MODE="research"
            INSTRUCTION="Treat this issue as a RESEARCH inquiry. Explore the codebase and explain how relevant components work together."
          fi

          cat <<EOF > aider_prompt.txt
You are a senior software engineer assistant. This issue was opened by @$ISSUE_USER and labeled **$MODE**.

$INSTRUCTION

If FEATURE or BUG:
1. **Frontend Plan**
2. **Backend Plan**
3. **Networking / Integration**
4. **Acceptance Criteria**

If RESEARCH:
- **Overview**
- **Key Components**
- **Data Flow**
- **Notes for Further Study**

---
**Issue Context**
Title: $ISSUE_TITLE

Description:
$ISSUE_BODY
EOF

      - name: Run Aider to generate response
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          aider --model gpt-4o-mini --message-file aider_prompt.txt --no-auto-commit > aider_output.txt

      - name: Post Aider output as issue comment
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          echo "### ü§ñ Aider ${MODE^} Response" > plan_comment.md
          echo "" >> plan_comment.md
          cat aider_output.txt >> plan_comment.md
          gh issue comment ${{ github.event.issue.number }} --body-file plan_comment.md
